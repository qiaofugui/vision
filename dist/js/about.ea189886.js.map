{"version":3,"file":"js/about.ea189886.js","mappings":"yGAAoEA,EAAQ,GAAWA,EAAQ,QAAuC,EAAO,IAAIC,EAAEC,SAASC,gBAAgBC,EAAEH,EAAEI,cAAc,QAAQC,EAAEJ,SAASK,cAAc,SAASC,EAAE,oBAAoBC,EAAE,iBAAiBC,EAAE,oBAA2C,GAAG,4BAA4BT,EAAEO,EAAE,0BAA0BC,EAAE,uBAAuBC,EAAE,0BAA4B,gCAAgC,GAAG,wBAAwBT,EAAEO,EAAE,sBAAsBC,EAAE,mBAAmBC,EAAE,sBAAwB,0BAA0B,GAAG,yBAAyBT,EAAEO,EAAE,uBAAuBC,EAAE,sBAAsBC,EAAE,uBAAyB,6BAA6B,KAAK,sBAAsBT,GAAG,KAAK,2BAA2B,SAASU,EAAEP,GAAG,OAAOA,aAAaQ,YAAYR,EAAEH,CAAC,CAAC,SAASY,EAAEZ,EAAEQ,GAAG,OAAOA,IAAI,OAAOL,IAAIA,EAAEF,SAASK,cAAc,SAASD,EAAEQ,UAAU,gCAAgCL,EAAE,KAAKL,EAAEW,YAAYT,IAAIK,EAAEV,GAAGO,IAAI,CAAC,SAASQ,IAAI,OAAOf,EAAEgB,SAASX,KAAK,MAAMF,GAAGA,EAAEc,YAAYZ,IAAIJ,SAASO,IAAI,CAAC,SAASU,EAAElB,GAAG,OAAOU,EAAEV,KAAKC,SAASQ,EAAE,CAAC,SAASU,EAAEnB,EAAEG,GAAG,OAAOe,EAAElB,IAAIe,KAAI,IAAKH,EAAEZ,EAAEG,IAAG,EAAG,CAAqCJ,EAAQ,GAAOmB,EAAEnB,EAAQ,GAAWoB,C,mBCI5sCpB,EAAQ,EAAU,CAACqB,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,iHCNV,MAAMI,GAAgBC,EAAAA,EAAAA,IAAY,SAAS,KAChD,MAAMC,GAAQC,EAAAA,EAAAA,IAAI,GAClB,SAASC,IACPF,EAAMG,OACR,CAEA,MAAMC,GAAQH,EAAAA,EAAAA,IAAI,SACZI,EAAcA,KAClBD,EAAMD,MAAwB,UAAhBC,EAAMD,MAAoB,UAAY,OAAO,EAG7D,MAAO,CACLH,QACAE,YACAE,QACAC,cACD,ICnBGC,EAAsBC,EAAQ,KAC9BC,EAAuBD,EAAQ,MAC/BE,EAAeF,EAAQ,MACvBG,EAAgBH,EAAQ,MACxBI,EAAcJ,EAAQ,MACtBK,EAAeL,EAAQ,MAEvBH,EAAQ,CACZS,MAAO,CAELC,gBAAiB,UAEjBC,WAAY,OAEZC,QAASL,EAETM,SAAUR,EAEVS,gBAAiBZ,EAEjBa,YAAa,WAEfC,QAAS,CAEPN,gBAAiB,OAEjBC,WAAY,OAEZC,QAASJ,EAETK,SAAUP,EAEVQ,gBAAiBV,EAEjBW,YAAa,SAIV,SAASE,EAAeC,GAC7B,OAAOlB,EAAMkB,EACf,C,wEClCA,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,MAEZC,EAAQ3B,IAGRM,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,SACnCuB,EAAAA,EAAAA,KACE,IAAMvB,EAAMD,QACZ,CAACyB,EAAUC,KACTC,QAAQC,IAAI,SAEZC,EAAeC,UAEfC,IAEAC,IAEAC,GAAa,IAKjB,IAAIJ,EAAiB,KAErB,MAAMK,GAASpC,EAAAA,EAAAA,IAAI,MAEbqC,GAAUrC,EAAAA,EAAAA,IAAI,MAEdsC,GAAetC,EAAAA,EAAAA,IAAI,GAEnBuC,GAAgBvC,EAAAA,EAAAA,IAAI,IAE1BwC,EAAAA,EAAAA,KAAU,KACRP,GAAW,KAIbO,EAAAA,EAAAA,KAAU,KACRC,OAAOC,iBAAiB,SAAUR,GAElCA,GAAe,IAIjB,MAAMD,EAAYA,KAChBF,EAAiBT,EAAMqB,SAASC,KAAKR,EAAOlC,MAAOC,EAAMD,OACzD,MAAM2C,EAAa,CACjBC,MAAO,CACLC,KAAM,iBACNC,IAAK,GACLC,KAAM,IAERC,OAAQ,CACNF,IAAK,MACLG,KAAM,UAERC,QAAS,CACPC,MAAM,EACNC,UAAYC,IACV,MAAMC,EAAgBD,EAAIE,KAAKC,SAEzBC,EAAQH,EAAcI,QAAO,CAACD,EAAOE,IAASF,EAAQE,EAAK3D,OAAO,GAClE4D,EAASN,EAAcI,QAAO,CAACG,EAAKF,IAAUE,EAAO,GAAEF,EAAKG,SAASC,SAASJ,EAAK3D,MAAQyD,EAAQ,eACtG,IACH,OAAOG,CAAM,GAGjBI,OAAQ,CACN,CACEC,KAAM,MACNC,MAAO,CACLf,MAAM,GAERgB,SAAU,CACRD,MAAO,CACLf,MAAM,GAERiB,UAAW,CACTjB,MAAM,OAMhBtB,EAAewC,UAAU1B,EAAW,EAGhC2B,EAAUC,UAEd5C,QAAQC,IAAI4C,GACZrC,EAAQnC,MAAQwE,EAChBvC,GAAa,EAGTA,EAAcA,KAElB,MAAMwC,EAAatC,EAAQnC,MAAMoC,EAAapC,OAAOwD,SAASkB,KAAKf,IAAI,CACrEG,KAAMH,EAAKG,KACX9D,MAAO2D,EAAK3D,MACZwD,SAAUG,EAAKH,aAGXmB,EAAaxC,EAAQnC,MAAMoC,EAAapC,OAAOwD,SAASkB,KAAKf,GAASA,EAAKG,OAC3Ec,EAAa,CACjB5B,OAAQ,CACNO,KAAMoB,GAERX,OAAQ,CACN,CACET,KAAMkB,KAIZ5C,EAAewC,UAAUO,EAAW,EAGhC5C,EAAgBA,KACpBK,EAAcrC,MAAQkC,EAAOlC,MAAM6E,YAAc,IAAM,IACvD,MAAMC,EAAgB,CACpBlC,MAAO,CACLmC,UAAW,CACTC,SAAU3C,EAAcrC,QAG5BgD,OAAQ,CACNiC,UAAW5C,EAAcrC,MACzBkF,WAAY7C,EAAcrC,MAC1BmF,QAAS9C,EAAcrC,MAAQ,EAC/B+E,UAAW,CACTC,SAAU3C,EAAcrC,MAAQ,MAGpCgE,OAAQ,CACN,CACEoB,OAA8B,EAAtB/C,EAAcrC,MACtBqF,OAAQ,CAAC,MAAO,OAChBnB,MAAO,CACLc,SAAU3C,EAAcrC,UAKhC6B,EAAewC,UAAUS,GACzBjD,EAAeyD,QAAQ,GAGzBC,EAAAA,EAAAA,KAAY,KAEVhD,OAAOiD,oBAAoB,SAAUxD,EAAc,IAIrD,MAAMyD,EAASA,KACbrD,EAAapC,QACToC,EAAapC,MAAQ,IAAGoC,EAAapC,MAAQmC,EAAQnC,MAAM0F,OAAS,GACxEzD,GAAa,EAET0D,EAAUA,KACdvD,EAAapC,QACToC,EAAapC,MAAQmC,EAAQnC,MAAM0F,OAAS,IAAGtD,EAAapC,MAAQ,GACxEiC,GAAa,EAGT2D,GAAUrE,EAAAA,EAAAA,KAAS,IACvBY,EAAQnC,MAAQmC,EAAQnC,MAAMoC,EAAapC,OAAO8D,KAAO,KAIrD+B,GAAWtE,EAAAA,EAAAA,KAAS,KAAM,CAC9ByD,SAAgC,IAAtB3C,EAAcrC,MAAc,KACtC8F,MAAO5E,EAAcjB,EAAMD,OAAOY,e,OAIpCQ,EAAM2E,QAAQC,iBAAiB,UAAW1B,IAE1CiB,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,UAAU,KAE7C3D,EAAAA,EAAAA,KAAU,KAERlB,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,UACRC,WAAY,UACZC,UAAW,MACXrG,MAAO,IACP,IAIJsG,EAAa,CACXtE,kB,6WC/LF,MAAMuE,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,UCRA,MAAMC,EAAc,CAClBC,KAAI,QACJC,KAAI,UACJC,KAAI,QACJC,KAAI,UACJC,KAAI,YACJC,KAAI,SACJC,KAAI,QACJC,KAAI,YACJC,KAAI,UACJC,KAAI,UACJC,KAAI,SACJC,KAAI,QACJC,MAAK,eACLC,KAAI,QACJC,KAAI,QACJC,KAAI,QACJC,KAAI,UACJC,KAAI,UACJC,KAAI,QACJC,KAAI,WACJC,MAAK,YACLC,KAAI,UACJC,KAAI,UACJC,KAAI,WACJC,KAAI,WACJC,KAAI,SACJC,KAAI,UACJC,KAAI,SACJC,KAAI,UACJC,KAAI,YACJC,KAAI,WACJC,KAAI,SACJC,KAAI,SACJC,KAAI,YAGC,SAASC,EAAoBtF,GAClC,MAAMuF,EAAQ,wBAAuBpC,EAAYnD,UACjD,MAAO,CACL5D,IAAK+G,EAAYnD,GACjBuF,KAAMA,EAEV,C,wCCnCA,MAAM,MAAExH,IAAUC,EAAAA,EAAAA,MAEZC,EAAQ3B,IAGRM,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,SACnCuB,EAAAA,EAAAA,KACE,IAAMvB,EAAMD,QACZ,CAACyB,EAAUC,KACTC,QAAQC,IAAI,SAEZC,EAAeC,UAEfC,IAEAC,IAEAC,GAAa,IAKjB,IAAIJ,EAAiB,KAErB,MAAMgH,GAAS/I,EAAAA,EAAAA,IAAI,MAEbqC,GAAUrC,EAAAA,EAAAA,IAAI,MAEdgJ,GAAUhJ,EAAAA,EAAAA,IAAI,CAAC,IAErBwC,EAAAA,EAAAA,KAAU,KACRP,GAAW,KAIbO,EAAAA,EAAAA,KAAU,KACRC,OAAOC,iBAAiB,SAAUR,GAElCA,GAAe,IAIjB,MAAMD,EAAYwC,UAChB1C,EAAiBT,EAAMqB,SAASC,KAAKmG,EAAO7I,MAAOC,EAAMD,OAGzD,MAAQuD,KAAMiB,SAAcuE,EAAAA,EAAMC,IAAI,0BACtC5H,EAAMqB,SAASwG,YAAY,QAASzE,GAEpC,MAAM7B,EAAa,CACjBC,MAAO,CACLC,KAAM,cACNE,KAAM,GACND,IAAK,IAEPoG,IAAK,CACHjF,KAAM,MACNS,IAAK,QAELyE,MAAM,EACNjF,MAAO,CACLf,MAAM,EACN2C,MAAO5E,EAAcjB,EAAMD,OAAOY,YAEpCkC,IAAK,KACLsG,OAAQ,KACRC,UAAW,CACTC,UAAW,UACXC,YAAa,SAGjBvG,OAAQ,CACND,KAAM,KACNqG,OAAQ,KACRI,OAAQ,aAGZ3H,EAAewC,UAAU1B,GAGzBd,EAAe4H,GAAG,SAASlF,UACzB,MAAMmF,EAAef,EAAmBtF,EAAIS,MAE5C,IAAKgF,EAAQ9I,MAAM0J,EAAajK,KAAM,CAEpC,MAAMkK,EAAM,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACrN,IAAKA,EAAIC,SAASvG,EAAIS,OAAsB,SAAbT,EAAIS,KAAiB,OAEpD,MAAQP,KAAMiB,SAAcuE,EAAAA,EAAMC,IAAIU,EAAad,MAEnDE,EAAQ9I,MAAM0J,EAAajK,KAAO+E,EAClCpD,EAAMqB,SAASwG,YAAYS,EAAajK,IAAK+E,EAC/C,CAEA,MAAMqF,EAAe,CACnBX,IAAK,CACHxE,IAAKgF,EAAajK,MAGtBoC,EAAewC,UAAUwF,EAAa,GACtC,EAGEvF,EAAUC,UAEd5C,QAAQC,IAAI4C,GACZrC,EAAQnC,MAAQwE,EAChBvC,GAAa,EAGTA,EAAcA,KAGlB,MAAM6H,EAAY3H,EAAQnC,MAAM0E,KAAIf,GAAQA,EAAKG,OAC3CiG,EAAY5H,EAAQnC,MAAM0E,KAAIf,IAAQ,CAG1CM,KAAM,gBAEN+F,aAAc,CACZC,MAAO,EAEPC,UAAW,UAEbpG,KAAMH,EAAKG,KACXP,KAAMI,EAAKH,SACX2G,iBAAkB,UAEdvF,EAAa,CACjB5B,OAAQ,CACNO,KAAMuG,GAER9F,OAAQ+F,GAEVlI,EAAewC,UAAUO,EAAW,EAGhC5C,EAAgBA,KACpB,MAAMK,EAAgBwG,EAAO7I,MAAM6E,YAAc,IAAM,IACjDC,EAAgB,CACpBlC,MAAO,CACLmC,UAAW,CACTC,SAAU3C,IAGdW,OAAQ,CACNiC,UAAW5C,EAAgB,EAC3B6C,WAAY7C,EAAgB,EAC5B8C,QAAS9C,EAAgB,EACzB0C,UAAW,CACTC,SAAU3C,EAAgB,KAIhCR,EAAewC,UAAUS,GACzBjD,EAAeyD,QAAQ,GAGzBC,EAAAA,EAAAA,KAAY,KAEVhD,OAAOiD,oBAAoB,SAAUxD,EAAc,IAIrD,MAAMoI,EAAYA,KAChB,MAAMC,EAAe,CACnBnB,IAAK,CACHxE,IAAK,UAGT7C,EAAewC,UAAUgG,EAAa,E,OAIxCjJ,EAAM2E,QAAQC,iBAAiB,UAAW1B,IAE1CiB,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,UAAU,KAE7C3D,EAAAA,EAAAA,KAAU,KAERlB,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,UACRC,WAAY,UACZC,UAAW,MACXrG,MAAO,IACP,IAIJsG,EAAa,CACXtE,kB,mJCpMF,MAAM,EAAc,EAEpB,Q,yECDA,MAAM,MAAEZ,IAAUC,EAAAA,EAAAA,MAEZC,EAAQ3B,IAGRM,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,SACnCuB,EAAAA,EAAAA,KACE,IAAMvB,EAAMD,QACZ,CAACyB,EAAUC,KACTC,QAAQC,IAAI,SAEZC,EAAeC,UAEfC,IAEAC,IAEAC,GAAa,IAKjB,IAAIJ,EAAiB,KAErB,MAAMyI,GAAUxK,EAAAA,EAAAA,IAAI,MAEdqC,GAAUrC,EAAAA,EAAAA,IAAI,OAEpBwC,EAAAA,EAAAA,KAAU,KACRP,GAAW,KAIbO,EAAAA,EAAAA,KAAU,KACRC,OAAOC,iBAAiB,SAAUR,GAElCA,GAAe,IAIjB,MAAMD,EAAYA,KAEhB,MAAMwI,EAAW,CACf,CAAC,oBAAqB,sBACtB,CAAC,qBAAsB,oBACvB,CAAC,oBAAqB,wBAGxB1I,EAAiBT,EAAMqB,SAASC,KAAK4H,EAAQtK,MAAOC,EAAMD,OAC1D,MAAM2C,EAAa,CACjBC,MAAO,CACLC,KAAM,WACNC,IAAK,GACLC,KAAM,IAERyH,KAAM,CACJ1H,IAAK,MACLC,KAAM,KACN0H,MAAO,KACPrB,OAAQ,KACRsB,cAAc,GAEhBxH,QAAS,CACPC,MAAM,GAERwH,MAAO,CACL1G,KAAM,YAER2G,MAAO,CACL3G,KAAM,SAERD,OAAQ,CACN,CACEC,KAAM,MACNoF,UAAW,CACTvD,MAAOzC,IACL,IAAIwH,EAAiB,KAQrB,OANEA,EADExH,EAAIrD,MAAQ,IACGuK,EAAS,GACjBlH,EAAIrD,MAAQ,IACJuK,EAAS,GAETA,EAAS,GAErB,IAAInJ,EAAMqB,SAASqI,QAAQC,eAAe,EAAG,EAAG,EAAG,EAAG,CAC3D,CACEC,OAAQ,EACRlF,MAAO+E,EAAe,IAExB,CACEG,OAAQ,EACRlF,MAAO+E,EAAe,KAExB,MAMZhJ,EAAewC,UAAU1B,GAGzBd,EAAe4H,GAAG,aAAa,KAC7BwB,cAAcC,EAAQlL,MAAM,IAE9B6B,EAAe4H,GAAG,YAAY,KAC5B0B,GAAe,GACf,EAIE7G,EAAUC,UAEd5C,QAAQC,IAAI4C,GACZrC,EAAQnC,MAAQwE,EAEhBrC,EAAQnC,MAAMoL,MAAK,CAACC,EAAGC,IAAMA,EAAEtL,MAAQqL,EAAErL,QACzCiC,IACAkJ,GAAe,EAIXI,GAAazL,EAAAA,EAAAA,IAAI,GAEjB0L,GAAW1L,EAAAA,EAAAA,IAAI,GACfmC,EAAcA,KAGlB,MAAMwJ,EAActJ,EAAQnC,MAAM0E,KAAIf,GAAQA,EAAKG,OAE7C4H,EAAWvJ,EAAQnC,MAAM0E,KAAIf,GAAQA,EAAK3D,QAC1C4E,EAAa,CACjB+F,MAAO,CACLpH,KAAMkI,GAGRE,SAAU,CACR,CACExI,MAAM,EACNoI,WAAYA,EAAWvL,MACvBwL,SAAUA,EAASxL,QAGvBgE,OAAQ,CACN,CACET,KAAMmI,KAIZ7J,EAAewC,UAAUO,EAAW,EAGhC5C,EAAgBA,KACpB,MAAMK,EAAgBiI,EAAQtK,MAAM6E,YAAc,IAAM,IAClDC,EAAgB,CACpBlC,MAAO,CACLmC,UAAW,CACTC,SAAU3C,IAGd2B,OAAQ,CACN,CACE4H,SAAUvJ,EACVgH,UAAW,CACTwC,gBAAiB,CAACxJ,EAAgB,EAAGA,EAAgB,EAAG,EAAG,OAKnER,EAAewC,UAAUS,GACzBjD,EAAeyD,QAAQ,EAInB4F,GAAUpL,EAAAA,EAAAA,IAAI,MACdqL,EAAgBA,KAChBD,EAAQlL,OAAOiL,cAAcC,GACjCA,EAAQlL,MAAQ8L,aAAY,KAC1BP,EAAWvL,QACXwL,EAASxL,QACLwL,EAASxL,MAAQmC,EAAQnC,MAAM0F,OAAS,IAC1C6F,EAAWvL,MAAQ,EACnBwL,EAASxL,MAAQ,GAEnBiC,GAAa,GACZ,IAAK,E,OAGVsD,EAAAA,EAAAA,KAAY,KAEVhD,OAAOiD,oBAAoB,SAAUxD,GACrCiJ,cAAcC,EAAQ,IAIxB9J,EAAM2E,QAAQC,iBAAiB,WAAY1B,IAE3CiB,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,WAAW,KAE9C3D,EAAAA,EAAAA,KAAU,KAERlB,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,UACRC,WAAY,WACZC,UAAW,OACXrG,MAAO,IACP,IAIJsG,EAAa,CACXtE,kB,8GCrNF,MAAM,EAAc,EAEpB,Q,2ECDA,MAAM,MAAEZ,IAAUC,EAAAA,EAAAA,MAEZC,EAAQ3B,IAGRM,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,SACnCuB,EAAAA,EAAAA,KACE,IAAMvB,EAAMD,QACZ,CAACyB,EAAUC,KACTC,QAAQC,IAAI,SAEZC,EAAeC,UAEfC,IAEAC,IAEAC,GAAa,IAKjB,MAAM8J,GAAYjM,EAAAA,EAAAA,IAAI,MAEtB,IAAI+B,EAAiB,KAErB,MAAMM,GAAUrC,EAAAA,EAAAA,IAAI,MAEdkM,GAAQlM,EAAAA,EAAAA,IAAI,CAEhBmM,YAAa,EAEbC,UAAW,EAEXhB,QAAS,QAGX5I,EAAAA,EAAAA,KAAU,KACRP,GAAW,KAIbO,EAAAA,EAAAA,KAAU,KACRC,OAAOC,iBAAiB,SAAUR,GAElCA,GAAe,IAIjB,MAAMD,EAAYA,KAChBF,EAAiBT,EAAMqB,SAASC,KAAKqJ,EAAU/L,MAAOC,EAAMD,OAE5D,MAAMmM,EAAS,CACbvJ,MAAO,CACLC,KAAM,WACNkC,UAAW,CACTC,SAAU,IAEZjC,KAAM,GACND,IAAK,IAEP0H,KAAM,CACJ1H,IAAK,MACLC,KAAM,KACN0H,MAAO,KACPrB,OAAQ,KAERsB,cAAc,GAEhBC,MAAO,CACL1G,KAAM,SAER2G,MAAO,CACL3G,KAAM,YAERf,QAAS,CACPkJ,QAAS,OACTC,YAAa,CACXpI,KAAM,OACNqI,EAAG,EACHC,UAAW,CACTzG,MAAO,UACP0G,MAAO,MAIbxI,OAAQ,CACN,CACEC,KAAM,MAEN2H,SAAU,GACV1H,MAAO,CACLf,MAAM,EACNsJ,SAAU,QACV1H,UAAW,CACTe,MAAO,SAGXuD,UAAW,CACTwC,gBAAiB,CAAC,EAAG,GAAI,GAAI,GAG7B/F,MAAO,IAAI1E,EAAMqB,SAASqI,QAAQC,eAAe,EAAG,EAAG,EAAG,EAAG,CAE3D,CAAEC,OAAQ,EAAGlF,MAAO,WAEpB,CAAEkF,OAAQ,EAAGlF,MAAO,iBAO9BjE,EAAewC,UAAU8H,GAGzBtK,EAAe4H,GAAG,aAAa,KAC7B9H,QAAQC,IAAI,aACZqJ,cAAce,EAAMhM,MAAMkL,QAAQ,IAEpCrJ,EAAe4H,GAAG,aAAa,KAC7B9H,QAAQC,IAAI,YACZuJ,GAAe,GACf,EAGE7G,EAAUC,UAEd5C,QAAQC,IAAI4C,GACZrC,EAAQnC,MAAQwE,EAEhBrC,EAAQnC,MAAMoL,MAAK,CAACC,EAAGC,IAAMD,EAAErL,MAAQsL,EAAEtL,QAEzCgM,EAAMhM,MAAMkM,UAAY/J,EAAQnC,MAAM0F,OAAS,IAAM,EAAIvD,EAAQnC,MAAM0F,OAAS,EAAIvD,EAAQnC,MAAM0F,OAAS,EAAI,EAC/GzD,IAEAkJ,GAAe,EAGXlJ,EAAcA,KAClB,MAAMyK,EAAwC,GAA/BV,EAAMhM,MAAMiM,YAAc,GACnCU,EAAgC,EAA1BX,EAAMhM,MAAMiM,YAClBW,EAAWzK,EAAQnC,MAAM6M,MAAMH,EAAOC,GACtC/H,EAAa,CACjBgG,MAAO,CACLrH,KAAMqJ,EAASlI,KAAIf,GAAQA,EAAKG,QAElCE,OAAQ,CACN,CACET,KAAMqJ,EAASlI,KAAIf,GAAQA,EAAK3D,WAItC6B,EAAewC,UAAUO,EAAW,EAGhCuG,EAAgBA,KAChBa,EAAMhM,MAAMkL,SAASD,cAAce,EAAMhM,MAAMkL,SACnDc,EAAMhM,MAAMkL,QAAUY,aAAY,KAChCE,EAAMhM,MAAMiM,cACRD,EAAMhM,MAAMiM,YAAcD,EAAMhM,MAAMkM,YACxCF,EAAMhM,MAAMiM,YAAc,GAE5BhK,GAAa,GACZ,IAAK,EAGJD,EAAgBA,KACpB,MAAMK,EAAgB0J,EAAU/L,MAAM6E,YAAc,IAAM,IACpDC,EAAgB,CACpBlC,MAAO,CACLmC,UAAW,CACTC,SAAU3C,IAGda,QAAS,CACPmJ,YAAa,CACXE,UAAW,CACTC,MAAOnK,KAIb2B,OAAQ,CACN,CAEE4H,SAAUvJ,EACVgH,UAAW,CACTwC,gBAAiB,CAAC,EAAGxJ,EAAgB,EAAGA,EAAgB,EAAG,OAKnER,EAAewC,UAAUS,GACzBjD,EAAeyD,QAAQ,E,OAGzBC,EAAAA,EAAAA,KAAY,KAEV0F,cAAce,EAAMhM,MAAMkL,SAI1B3I,OAAOiD,oBAAoB,SAAUxD,EAAc,IAIrDZ,EAAM2E,QAAQC,iBAAiB,aAAc1B,IAE7CiB,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,aAAa,KAEhD3D,EAAAA,EAAAA,KAAU,KAERlB,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,UACRC,WAAY,aACZC,UAAW,SACXrG,MAAO,IACP,IAIJsG,EAAa,CACXtE,kB,gHChOF,MAAM,EAAc,EAEpB,Q,0ECDA,MAAM,MAAEZ,IAAUC,EAAAA,EAAAA,MAEZC,EAAQ3B,IAGRM,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,SACnCuB,EAAAA,EAAAA,KACE,IAAMvB,EAAMD,QACZ,CAACyB,EAAUC,KACTC,QAAQC,IAAI,SAEZC,EAAeC,UAEfC,IAEAC,IAEAC,GAAa,IAKjB,IAAIJ,EAAiB,KAErB,MAAMiL,GAAWhN,EAAAA,EAAAA,IAAI,MAEfqC,GAAUrC,EAAAA,EAAAA,IAAI,MAEdsC,GAAetC,EAAAA,EAAAA,IAAI,GACnBoL,GAAUpL,EAAAA,EAAAA,IAAI,OAEpBwC,EAAAA,EAAAA,KAAU,KACRP,GAAW,KAIbO,EAAAA,EAAAA,KAAU,KACRC,OAAOC,iBAAiB,SAAUR,GAElCA,GAAe,IAIjB,MAAMD,EAAYA,KAChBF,EAAiBT,EAAMqB,SAASC,KAAKoK,EAAS9M,MAAOC,EAAMD,OAC3D,MAAM2C,EAAa,CACjBC,MAAO,CACLC,KAAM,YACNC,IAAK,GACLC,KAAM,KAGVlB,EAAewC,UAAU1B,GAGzBd,EAAe4H,GAAG,aAAa,KAC7B9H,QAAQC,IAAI,aACZqJ,cAAcC,EAAQlL,MAAM,IAE9B6B,EAAe4H,GAAG,aAAa,KAC7B9H,QAAQC,IAAI,YACZuJ,GAAe,GACf,EAGE7G,EAAUC,UAEd5C,QAAQC,IAAI4C,GACZrC,EAAQnC,MAAQwE,EAChBvC,IACAkJ,GAAe,EAGXlJ,EAAcA,KAElB,MAAM8K,EAAY,CAChB,CAAC,MAAO,OACR,CAAC,MAAO,OACR,CAAC,MAAO,OACR,CAAC,MAAO,OACR,CAAC,MAAO,QAEJxC,EAAW,CACf,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,WACZ,CAAC,UAAW,YAGRmC,EAA6B,EAArBtK,EAAapC,MACrB2M,EAAiC,GAA1BvK,EAAapC,MAAQ,GAE5B4M,EAAWzK,EAAQnC,MAAM6M,MAAMH,EAAOC,GACtC5C,EAAY6C,EAASlI,KAAI,CAACf,EAAMqJ,KAAU,CAC9C/I,KAAM,MACNoB,OAAQ0H,EAAUC,GAClBC,gBAAgB,EAChB7I,UAAW,CACTjB,MAAM,GAERe,MAAO,CACLuI,SAAU,SACV3G,MAAOyE,EAASyC,GAAO,IAEzBzJ,KAAM,CACJ,CACEvD,MAAO2D,EAAKuJ,MACZpJ,KAAO,GAAEH,EAAKG,aAAaH,EAAKuJ,QAChC7D,UAAW,CACTvD,MAAO,IAAI1E,EAAMqB,SAASqI,QAAQC,eAAe,EAAG,EAAG,EAAG,EAAG,CAC3D,CACEC,OAAQ,EACRlF,MAAOyE,EAASyC,GAAO,IAEzB,CACEhC,OAAQ,EACRlF,MAAOyE,EAASyC,GAAO,QAK/B,CACEhN,MAAO2D,EAAKwJ,MACZ9D,UAAW,CACTvD,MAAO,iBAKTlB,EAAa,CACjBZ,OAAQ+F,GAEVlI,EAAewC,UAAUO,EAAW,EAGhC5C,EAAgBA,KACpB,MAAMK,EAAgByK,EAAS9M,MAAM6E,YAAc,IAAM,IACnDuI,EAA8B,EAAhB/K,EACdgL,EAA4B,IAAdD,EACdtI,EAAgB,CACpBlC,MAAO,CACLmC,UAAW,CACTC,SAAU3C,IAGd2B,OAAQ,CACN,CACEC,KAAM,MACNmB,OAAQ,CAACiI,EAAaD,GACtBlJ,MAAO,CACLc,SAAU3C,EAAgB,MAG9B,CACE4B,KAAM,MACNmB,OAAQ,CAACiI,EAAaD,GACtBlJ,MAAO,CACLc,SAAU3C,EAAgB,MAG9B,CACE4B,KAAM,MACNmB,OAAQ,CAACiI,EAAaD,GACtBlJ,MAAO,CACLc,SAAU3C,EAAgB,MAG9B,CACE4B,KAAM,MACNmB,OAAQ,CAACiI,EAAaD,GACtBlJ,MAAO,CACLc,SAAU3C,EAAgB,MAG9B,CACE4B,KAAM,MACNmB,OAAQ,CAACiI,EAAaD,GACtBlJ,MAAO,CACLc,SAAU3C,EAAgB,QAKlCR,EAAewC,UAAUS,GACzBjD,EAAeyD,QAAQ,EAInB6F,EAAgBA,KAChBD,EAAQlL,OAAOiL,cAAcC,EAAQlL,OACzCkL,EAAQlL,MAAQ8L,aAAY,KAC1B1J,EAAapC,QACToC,EAAapC,MAAQ,IAAGoC,EAAapC,MAAQ,GACjDiC,GAAa,GACZ,IAAK,E,OAGVsD,EAAAA,EAAAA,KAAY,KAEVhD,OAAOiD,oBAAoB,SAAUxD,GAErCiJ,cAAcC,EAAQlL,MAAM,IAI9BoB,EAAM2E,QAAQC,iBAAiB,YAAa1B,IAE5CiB,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,YAAY,KAE/C3D,EAAAA,EAAAA,KAAU,KAERlB,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,UACRC,WAAY,YACZC,UAAW,QACXrG,MAAO,IACP,IAIJsG,EAAa,CACXtE,kB,+GChOF,MAAM,EAAc,EAEpB,Q,kGCCA,MAAM,MAAEZ,IAAUC,EAAAA,EAAAA,MAEZC,EAAQ3B,IAGRM,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,SACnCuB,EAAAA,EAAAA,KACE,IAAMvB,EAAMD,QACZ,CAACyB,EAAUC,KACTC,QAAQC,IAAI,SAEZC,EAAeC,UAEfC,IAEAC,IAEAC,GAAa,IAKjB,IAAIJ,EAAiB,KAErB,MAAMyL,GAAWxN,EAAAA,EAAAA,IAAI,MAEfqC,GAAUrC,EAAAA,EAAAA,IAAI,OAEpBwC,EAAAA,EAAAA,KAAU,KACRP,GAAW,KAIbO,EAAAA,EAAAA,KAAU,KACRC,OAAOC,iBAAiB,SAAUR,GAElCA,GAAe,IAIjB,MAAMD,EAAYA,KAChBF,EAAiBT,EAAMqB,SAASC,KAAK4K,EAAStN,MAAOC,EAAMD,OAC3D,MAAM2C,EAAa,CACjBgI,MAAO,CACL1G,KAAM,WAENsJ,aAAa,GAEf3C,MAAO,CACL3G,KAAM,SAERuG,KAAM,CACJ1H,IAAK,MACLC,KAAM,KACN0H,MAAO,KACPrB,OAAQ,KAERsB,cAAc,GAEhBxH,QAAS,CACPkJ,QAAS,QAEXpJ,OAAQ,CACND,KAAM,GACND,IAAK,MACLG,KAAM,WAGVpB,EAAewC,UAAU1B,EAAW,EAGhC2B,EAAWE,IAGf7C,QAAQC,IAAI4C,GACZrC,EAAQnC,MAAQwE,EAChBvC,GAAa,EAGTA,EAAcA,KAElB,MAAMuL,EAAY,CAChB,yBACA,0BACA,0BACA,yBACA,0BAGIC,EAAY,CAChB,uBACA,wBACA,wBACA,uBACA,wBAKIC,EAAUvL,EAAQnC,MAAM2N,OAAOC,MAE/BlC,EAAWvJ,EAAQnC,MAAM6N,EAAW7N,OAAOuD,KAC3CwG,EAAY2B,EAAShH,KAAI,CAACf,EAAMqJ,KAAU,CAC9ClJ,KAAMH,EAAKG,KACXG,KAAM,OACNV,KAAMI,EAAKJ,KAEXuK,MAAOD,EAAW7N,MAElB+N,UAAW,CACTjI,MAAO,IAAI1E,EAAMqB,SAASqI,QAAQC,eAAe,EAAG,EAAG,EAAG,EAAG,CAAC,CAC5DC,OAAQ,EACRlF,MAAO0H,EAAUR,IAChB,CACDhC,OAAQ,EACRlF,MAAO2H,EAAUT,WAKjBlD,EAAY4B,EAAShH,KAAIf,GAAQA,EAAKG,OACtCc,EAAa,CACjB+F,MAAO,CACLpH,KAAMmK,GAER1K,OAAQ,CACNO,KAAMuG,GAER9F,OAAQ+F,GAEVlI,EAAewC,UAAUO,EAAW,EAGhC5C,EAAgBA,KACpBK,EAAcrC,MAAQsN,EAAStN,MAAM6E,YAAc,IAAM,IACzD,MAAMC,EAAgB,CAEpB9B,OAAQ,CACNiC,UAAW5C,EAAcrC,MACzBkF,WAAY7C,EAAcrC,MAE1BmF,QAAS9C,EAAcrC,MACvB+E,UAAW,CACTC,SAAU3C,EAAcrC,MAAQ,OAItC6B,EAAewC,UAAUS,GACzBjD,EAAeyD,QAAQ,GAGzBC,EAAAA,EAAAA,KAAY,KAEVhD,OAAOiD,oBAAoB,SAAUxD,EAAc,IAIrD,MAAMgM,GAAalO,EAAAA,EAAAA,KAAI,GAEjB+N,GAAa/N,EAAAA,EAAAA,IAAI,OAEjBmO,EAAkBC,IACtBL,EAAW7N,MAAQkO,EACnBF,EAAWhO,OAAQ,EACnBiC,GAAa,EAGTkM,GAAY5M,EAAAA,EAAAA,KAAS,IACpBY,EAAQnC,MACNmC,EAAQnC,MAAM6N,EAAW7N,OAAO4C,MADZ,KAIvBP,GAAgBvC,EAAAA,EAAAA,IAAI,GACpB+F,GAAWtE,EAAAA,EAAAA,KAAS,KACjB,CACLyD,SAAU3C,EAAcrC,MAAQ,KAChC8F,MAAO5E,EAAcjB,EAAMD,OAAOY,eAGhCwN,GAAc7M,EAAAA,EAAAA,KAAS,KACpB,CACL8M,WAAYhM,EAAcrC,MAAQ,KAClCW,gBAAiBO,EAAcjB,EAAMD,OAAOgB,gB,OAKhDI,EAAM2E,QAAQC,iBAAiB,YAAa1B,IAE5CiB,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,YAAY,KAE/C3D,EAAAA,EAAAA,KAAU,KAERlB,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,UACRC,WAAY,YACZC,UAAW,QACXrG,MAAO,IACP,IAIJsG,EAAa,CACXtE,kB,woBC5MF,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,oYCOA,MAAMV,EAAQ3B,KAER,MAAEyB,IAAUC,EAAAA,EAAAA,MAEZpB,GAAQsB,EAAAA,EAAAA,KAAS,IAAMD,EAAMrB,QAC7BY,GAAUU,EAAAA,EAAAA,KAAS,IAAML,EAAcjB,EAAMD,OAAOa,UACpDyN,GAAY/M,EAAAA,EAAAA,KAAS,IAAML,EAAcjB,EAAMD,OAAOe,kBACtDD,GAAWS,EAAAA,EAAAA,KAAS,IAAML,EAAcjB,EAAMD,OAAOc,WACrDyN,GAAiBhN,EAAAA,EAAAA,KAAS,KAAM,CACpCZ,gBAAiBO,EAAcjB,EAAMD,OAAOW,gBAC5CmF,MAAO5E,EAAcjB,EAAMD,OAAOY,eAI9B4N,GAAmB1O,EAAAA,EAAAA,IAAI,CAC3B2O,OAAO,EACPC,QAAQ,EACRhK,KAAK,EACLiK,MAAM,EACNC,KAAK,EACLzB,OAAO,IAEHsB,GAAQ3O,EAAAA,EAAAA,IAAI,MACZ4O,GAAS5O,EAAAA,EAAAA,IAAI,MACb4E,GAAM5E,EAAAA,EAAAA,IAAI,MACV6O,GAAO7O,EAAAA,EAAAA,IAAI,MACX8O,GAAM9O,EAAAA,EAAAA,IAAI,MACVqN,GAAQrN,EAAAA,EAAAA,IAAI,MAGZ+O,EAAatK,UASjBnD,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,aACRC,WAAY,aACZC,UAAWA,EACXrG,OAAQwO,EAAiBxO,MAAMqG,IAC/B,EAGEyI,EAAWvK,UACf5C,QAAQC,IAAI2B,GAEZ,MAAM8C,EAAY9C,EAAK8C,UACjB0I,EAAcxL,EAAKvD,MACzBwO,EAAiBxO,MAAMqG,GAAa0I,QAE9BC,EAAAA,EAAAA,MACN5N,EAAM6N,MAAM5I,GAAWrE,eAAe,EAExCZ,EAAM2E,QAAQC,iBAAiB,aAAc8I,IAC7CvJ,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,aAAa,IAIhD,MAAMiJ,EAAoBA,KAIxB9N,EAAM2E,QAAQG,KAAK,CACjBC,OAAQ,cACRC,WAAY,cACZC,UAAW,GACXrG,MAAO,IACP,EAEEmP,EAAkBA,KACtB7N,EAAMpB,aAAa,EAErBkB,EAAM2E,QAAQC,iBAAiB,cAAemJ,IAC9C5J,EAAAA,EAAAA,KAAY,KACVnE,EAAM2E,QAAQE,mBAAmB,cAAc,IAGjD,MAAMmJ,GAAOtP,EAAAA,EAAAA,IAAI,IACXuP,GAAQvP,EAAAA,EAAAA,IAAI,OAClBwC,EAAAA,EAAAA,KAAU,KACR8M,EAAKpP,MAAQoB,EAAMkO,OAAO,IAAIC,MAAQC,OAAO,uBACzCH,EAAMrP,OAAOiL,cAAcoE,EAAMrP,OACrCqP,EAAMrP,MAAQ8L,aAAY,KACxBsD,EAAKpP,MAAQoB,EAAMkO,OAAO,IAAIC,MAAQC,OAAO,sBAAsB,GAClE,IAAK,KAEVjK,EAAAA,EAAAA,KAAY,KACN8J,EAAMrP,OAAOiL,cAAcoE,EAAMrP,MAAM,IAI7C,MAAMyP,GAAuBlO,EAAAA,EAAAA,KAAS,KAAM,CAC1CZ,gBAAiBO,EAA8B,UAAhBjB,EAAMD,MAAoB,UAAY,SAASW,gBAC9EmF,MAAO5E,EAA8B,UAAhBjB,EAAMD,MAAoB,UAAY,SAASY,eAIhE8O,GAAe5P,EAAAA,EAAAA,KAAI6P,EAAAA,EAAAA,IAAOzR,SAASC,kBACzCwD,QAAQC,KAAI+N,EAAAA,EAAAA,IAAOzR,SAASC,kBAE5B,MAAMyR,EAAkBA,MACtBC,EAAAA,EAAAA,IAAW3R,SAASC,iBACpBuR,EAAa1P,QAAS2P,EAAAA,EAAAA,IAAOzR,SAASC,gBAAgB,E,k1ECpHxD,MAAM,IAA2B,OAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://vision/./node_modules/be-full/dist/main.min.js","webpack://vision/./node_modules/vue-loader/dist/exportHelper.js","webpack://vision/./src/store/index.js","webpack://vision/./src/utils/theme_utils.js","webpack://vision/./src/components/Hot.vue","webpack://vision/./src/components/Hot.vue?a0cd","webpack://vision/./src/utils/map_utils.js","webpack://vision/./src/components/Map.vue","webpack://vision/./src/components/Map.vue?8a65","webpack://vision/./src/components/Rank.vue","webpack://vision/./src/components/Rank.vue?720d","webpack://vision/./src/components/Seller.vue","webpack://vision/./src/components/Seller.vue?cc9d","webpack://vision/./src/components/Stock.vue","webpack://vision/./src/components/Stock.vue?2611","webpack://vision/./src/components/Trend.vue","webpack://vision/./src/components/Trend.vue?ff2e","webpack://vision/./src/views/ScreenPage.vue","webpack://vision/./src/views/ScreenPage.vue?8adc"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.toggleFull=exports.isFull=exports.exitFull=exports.beFull=void 0;var e=document.documentElement,l=e.querySelector(\"head\"),n=document.createElement(\"style\"),t=\"requestFullscreen\",u=\"exitFullscreen\",r=\"fullscreenElement\",s=\"onfullscreenchange\";if(\"webkitRequestFullScreen\"in e)t=\"webkitRequestFullScreen\",u=\"webkitExitFullscreen\",r=\"webkitFullscreenElement\",s=\"onwebkitfullscreenchange\";else if(\"msRequestFullscreen\"in e)t=\"msRequestFullscreen\",u=\"msExitFullscreen\",r=\"msFullscreenElement\",s=\"MSFullscreenChange\";else if(\"mozRequestFullScreen\"in e)t=\"mozRequestFullScreen\",u=\"mozCancelFullScreen\",r=\"mozFullScreenElement\",s=\"onmozfullscreenchange\";else if(!(\"requestFullscreen\"in e))throw\"当前浏览器不支持Fullscreen API !\";function c(l){return l instanceof HTMLElement?l:e}function o(e,u){return u&&(null===l&&(l=document.createElement(\"head\")),n.innerHTML=\":fullscreen{background-color:\"+u+\";}\",l.appendChild(n)),c(e)[t]()}function i(){return e.contains(n)&&(null==l||l.removeChild(n)),document[u]()}function F(e){return c(e)===document[r]}function m(e,l){return F(e)?(i(),!1):(o(e,l),!0)}exports.beFull=o,exports.exitFull=i,exports.isFull=F,exports.toggleFull=m;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport const useStoreStore = defineStore('store', () => {\n  const count = ref(0)\n  function increment () {\n    count.value++\n  }\n\n  const theme = ref('chalk')\n  const changeTheme = () => {\n    theme.value = theme.value === 'chalk' ? 'vintage' : 'chalk'\n  }\n\n  return {\n    count,\n    increment,\n    theme,\n    changeTheme\n  }\n})\n","const headerBorderDarkSrc = require('../assets/img/header_border_dark.png')\r\nconst headerBorderLightSrc = require('../assets/img/header_border_light.png')\r\nconst themeDarkSrc = require('../assets/img/qiehuan_dark.png')\r\nconst themeLightSrc = require('../assets/img/qiehuan_light.png')\r\nconst logoDarkSrc = require('../assets/img/logo_dark.png')\r\nconst logoLightSrc = require('../assets/img/logo_light.png')\r\n\r\nconst theme = {\r\n  chalk: {\r\n    // 背景颜色\r\n    backgroundColor: '#161522',\r\n    // 标题文字颜色\r\n    titleColor: '#fff',\r\n    // LOGO\r\n    logoSrc: logoDarkSrc,\r\n    // 切换主题按钮的图片路径\r\n    themeSrc: themeDarkSrc,\r\n    // 主页顶部边框图片路径\r\n    headerBorderSrc: headerBorderDarkSrc,\r\n\r\n    selectedBgc: '#222733'\r\n  },\r\n  vintage: {\r\n    // 背景颜色\r\n    backgroundColor: '#eee',\r\n    // 标题文字颜色\r\n    titleColor: '#111',\r\n    // LOGO\r\n    logoSrc: logoLightSrc,\r\n    // 切换主题按钮的图片路径\r\n    themeSrc: themeLightSrc,\r\n    // 主页顶部边框图片路径\r\n    headerBorderSrc: headerBorderLightSrc,\r\n\r\n    selectedBgc: '#fff'\r\n  }\r\n}\r\n\r\nexport function getThemeValue (themeValue) {\r\n  return theme[themeValue]\r\n}\r\n","<script setup>\r\nimport { getCurrentInstance, onMounted, ref, onUnmounted, computed, defineExpose, watch } from 'vue'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst store = useStoreStore()\r\n\r\n// 监听主题变化\r\nconst theme = computed(() => store.theme)\r\nwatch(\r\n  () => theme.value,\r\n  (newValue, oldValue) => {\r\n    console.log('主题切换了')\r\n    // 1.销毁图表实例\r\n    echartInstance.dispose()\r\n    // 2.重新初始化图表实例\r\n    initChart()\r\n    // 3.屏幕适配\r\n    screenAdapter()\r\n    // 4.更新图表数据\r\n    updateChart()\r\n  }\r\n)\r\n\r\n// 图表实例\r\nlet echartInstance = null\r\n// 图表 dom 元素\r\nconst hotRef = ref(null)\r\n// 图表数据\r\nconst allData = ref(null)\r\n// 饼图切换\r\nconst currentIndex = ref(0)\r\n\r\nconst titleFontSize = ref(0)\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  // getData()\r\n})\r\n// 窗口变化\r\nonMounted(() => {\r\n  window.addEventListener('resize', screenAdapter)\r\n  // 开始也要执行一次\r\n  screenAdapter()\r\n})\r\n\r\n// 初始化图表\r\nconst initChart = () => {\r\n  echartInstance = proxy.$echarts.init(hotRef.value, theme.value)\r\n  const initOption = {\r\n    title: {\r\n      text: '▎ 热销商品销售金额占比统计',\r\n      top: 20,\r\n      left: 20\r\n    },\r\n    legend: {\r\n      top: '15%',\r\n      icon: 'circle'\r\n    },\r\n    tooltip: {\r\n      show: true,\r\n      formatter: (arg) => {\r\n        const thirdCategory = arg.data.children\r\n        // 计算所有三级分类数值总和\r\n        const total = thirdCategory.reduce((total, item) => total + item.value, 0)\r\n        const resStr = thirdCategory.reduce((str, item) => (str + `${item.name}: ${parseInt(item.value / total * 100)}%<br />`\r\n        ), '')\r\n        return resStr\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        label: {\r\n          show: false\r\n        },\r\n        emphasis: {\r\n          label: {\r\n            show: true\r\n          },\r\n          labelLine: {\r\n            show: false\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(initOption)\r\n}\r\n// 获取图表数据\r\nconst getData = async (res) => {\r\n  // const { data: res } = await proxy.$http.get('/hot')\r\n  console.log(res)\r\n  allData.value = res\r\n  updateChart()\r\n}\r\n// 更新图表\r\nconst updateChart = () => {\r\n  // 处理数据\r\n  const seriesData = allData.value[currentIndex.value].children.map((item) => ({\r\n    name: item.name,\r\n    value: item.value,\r\n    children: item.children\r\n  }))\r\n  // 图例\r\n  const legendData = allData.value[currentIndex.value].children.map((item) => item.name)\r\n  const dataOption = {\r\n    legend: {\r\n      data: legendData\r\n    },\r\n    series: [\r\n      {\r\n        data: seriesData\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(dataOption)\r\n}\r\n// 浏览器屏幕发生变化调用，屏幕适配\r\nconst screenAdapter = () => {\r\n  titleFontSize.value = hotRef.value.offsetWidth / 100 * 3.6\r\n  const adapterOption = {\r\n    title: {\r\n      textStyle: {\r\n        fontSize: titleFontSize.value\r\n      }\r\n    },\r\n    legend: {\r\n      itemWidth: titleFontSize.value,\r\n      itemHeight: titleFontSize.value,\r\n      itemGap: titleFontSize.value / 2,\r\n      textStyle: {\r\n        fontSize: titleFontSize.value / 1.5\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        radius: titleFontSize.value * 5,\r\n        center: ['50%', '60%'],\r\n        label: {\r\n          fontSize: titleFontSize.value\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(adapterOption)\r\n  echartInstance.resize()\r\n}\r\n\r\nonUnmounted(() => {\r\n  // 取消监听\r\n  window.removeEventListener('resize', screenAdapter)\r\n})\r\n\r\n// 切换饼图数据\r\nconst toLeft = () => {\r\n  currentIndex.value--\r\n  if (currentIndex.value < 0) currentIndex.value = allData.value.length - 1\r\n  updateChart()\r\n}\r\nconst toRight = () => {\r\n  currentIndex.value++\r\n  if (currentIndex.value > allData.value.length - 1) currentIndex.value = 0\r\n  updateChart()\r\n}\r\n// 计算标题\r\nconst catName = computed(() => (\r\n  allData.value ? allData.value[currentIndex.value].name : ''\r\n))\r\n\r\n// 计算样式按屏幕设置大小\r\nconst comStyle = computed(() => ({\r\n  fontSize: titleFontSize.value * 1.3 + 'px',\r\n  color: getThemeValue(theme.value).titleColor\r\n}))\r\n\r\n// 组件创建注册回调函数\r\nproxy.$socket.registerCallBack('hotData', getData)\r\n// 组件销毁注销回调函数\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('hotData')\r\n})\r\nonMounted(() => {\r\n  // 发送数据给服务器\r\n  proxy.$socket.send({\r\n    action: 'getData',\r\n    socketType: 'hotData',\r\n    chartName: 'hot',\r\n    value: ''\r\n  })\r\n})\r\n\r\n// 让父组件可拿到自己方法\r\ndefineExpose({\r\n  screenAdapter\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" ref=\"hotRef\"></div>\r\n    <span class=\"iconfont arr-left\" :style=\"comStyle\" @click=\"toLeft\">&#xe6ef;</span>\r\n    <span class=\"iconfont arr-right\" :style=\"comStyle\" @click=\"toRight\">&#xe6ed;</span>\r\n    <span class=\"cat-name\" :style=\"comStyle\">{{ catName }}</span>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n.iconfont {\r\n  position: absolute;\r\n  top: 60%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  color: #fff;\r\n}\r\n\r\n.arr-left {\r\n  left: 10%;\r\n}\r\n\r\n.arr-right {\r\n  right: 10%;\r\n}\r\n\r\n.cat-name {\r\n  position: absolute;\r\n  left: 80%;\r\n  bottom: 20px;\r\n  color: #fff;\r\n}\r\n</style>\r\n","import script from \"./Hot.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Hot.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Hot.vue?vue&type=style&index=0&id=0b7d87ab&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b7d87ab\"]])\n\nexport default __exports__","const name2pinyin = {\r\n  安徽: 'anhui',\r\n  陕西: 'shanxi1',\r\n  澳门: 'aomen',\r\n  北京: 'beijing',\r\n  重庆: 'chongqing',\r\n  福建: 'fujian',\r\n  甘肃: 'gansu',\r\n  广东: 'guangdong',\r\n  广西: 'guangxi',\r\n  贵州: 'guizhou',\r\n  海南: 'hainan',\r\n  河北: 'hebei',\r\n  黑龙江: 'heilongjiang',\r\n  河南: 'henan',\r\n  湖北: 'hubei',\r\n  湖南: 'hunan',\r\n  江苏: 'jiangsu',\r\n  江西: 'jiangxi',\r\n  吉林: 'jilin',\r\n  辽宁: 'liaoning',\r\n  内蒙古: 'neimenggu',\r\n  宁夏: 'ningxia',\r\n  青海: 'qinghai',\r\n  山东: 'shandong',\r\n  上海: 'shanghai',\r\n  山西: 'shanxi',\r\n  四川: 'sichuan',\r\n  台湾: 'taiwan',\r\n  天津: 'tianjin',\r\n  香港: 'xianggang',\r\n  新疆: 'xinjiang',\r\n  西藏: 'xizang',\r\n  云南: 'yunnan',\r\n  浙江: 'zhejiang'\r\n}\r\n\r\nexport function getProvinceMapInfo (arg) {\r\n  const path = `/static/map/province/${name2pinyin[arg]}.json`\r\n  return {\r\n    key: name2pinyin[arg],\r\n    path: path\r\n  }\r\n}\r\n","<script setup>\r\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\r\nimport axios from 'axios'\r\nimport { getProvinceMapInfo } from '@/utils/map_utils'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst store = useStoreStore()\r\n\r\n// 监听主题变化\r\nconst theme = computed(() => store.theme)\r\nwatch(\r\n  () => theme.value,\r\n  (newValue, oldValue) => {\r\n    console.log('主题切换了')\r\n    // 1.销毁图表实例\r\n    echartInstance.dispose()\r\n    // 2.重新初始化图表实例\r\n    initChart()\r\n    // 3.屏幕适配\r\n    screenAdapter()\r\n    // 4.更新图表数据\r\n    updateChart()\r\n  }\r\n)\r\n\r\n// 图表实例\r\nlet echartInstance = null\r\n// 图表 dom 元素\r\nconst mapRef = ref(null)\r\n// 图表数据\r\nconst allData = ref(null)\r\n// 缓存省份地图数据\r\nconst mapData = ref({})\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  // getData()\r\n})\r\n// 窗口变化\r\nonMounted(() => {\r\n  window.addEventListener('resize', screenAdapter)\r\n  // 开始也要执行一次\r\n  screenAdapter()\r\n})\r\n\r\n// 初始化图表\r\nconst initChart = async () => {\r\n  echartInstance = proxy.$echarts.init(mapRef.value, theme.value)\r\n\r\n  // 获取中国矢量地图\r\n  const { data: res } = await axios.get('/static/map/china.json')\r\n  proxy.$echarts.registerMap('china', res)\r\n\r\n  const initOption = {\r\n    title: {\r\n      text: '▎ 商家分布与销量排行',\r\n      left: 20,\r\n      top: 20\r\n    },\r\n    geo: {\r\n      type: 'map',\r\n      map: 'china',\r\n      // 设置允许拖动和缩放\r\n      roam: true,\r\n      label: {\r\n        show: true,\r\n        color: getThemeValue(theme.value).titleColor\r\n      },\r\n      top: '5%',\r\n      bottom: '5%',\r\n      itemStyle: {\r\n        areaColor: '#2E72BF',\r\n        borderColor: '#333'\r\n      }\r\n    },\r\n    legend: {\r\n      left: '5%',\r\n      bottom: '5%',\r\n      orient: 'vertical'\r\n    }\r\n  }\r\n  echartInstance.setOption(initOption)\r\n\r\n  // 监听图表点击事件\r\n  echartInstance.on('click', async (arg) => {\r\n    const provinceInfo = getProvinceMapInfo(arg.name)\r\n    // 如果已经缓存了，就不再请求了\r\n    if (!mapData.value[provinceInfo.key]) {\r\n      // 如果是直辖市，不需要请求\r\n      const arr = ['北京', '天津', '上海', '重庆', '新疆', '西藏', '宁夏', '内蒙古', '广西', '黑龙江', '吉林', '辽宁', '河北', '山东', '江苏', '安徽', '浙江', '福建', '广东', '海南', '云南', '贵州', '四川', '湖南', '湖北', '河南', '山西', '陕西', '甘肃', '青海', '江西', '台湾', '香港', '澳门']\r\n      if (!arr.includes(arg.name) || arg.name === '南海诸岛') return\r\n      // 获取相应的省份地图\r\n      const { data: res } = await axios.get(provinceInfo.path)\r\n      // 缓存\r\n      mapData.value[provinceInfo.key] = res\r\n      proxy.$echarts.registerMap(provinceInfo.key, res)\r\n    }\r\n    // 切换地图显示\r\n    const changeOption = {\r\n      geo: {\r\n        map: provinceInfo.key\r\n      }\r\n    }\r\n    echartInstance.setOption(changeOption)\r\n  })\r\n}\r\n// 获取图表数据\r\nconst getData = async (res) => {\r\n  // const { data: res } = await proxy.$http.get('/map')\r\n  console.log(res)\r\n  allData.value = res\r\n  updateChart()\r\n}\r\n// 更新图表\r\nconst updateChart = () => {\r\n  // 处理数据\r\n  // 图例的数据\r\n  const legendArr = allData.value.map(item => item.name)\r\n  const seriesArr = allData.value.map(item => ({\r\n    // 一个类别下所有散点数据\r\n    // 如果想要在地图中显示散点的数据，需要给散点的图表增加一个 coordinateSystem 属性，值为 geo\r\n    type: 'effectScatter',\r\n    // 散点涟漪效果\r\n    rippleEffect: {\r\n      scale: 5,\r\n      // 空心的涟漪效果\r\n      brushType: 'stroke'\r\n    },\r\n    name: item.name,\r\n    data: item.children,\r\n    coordinateSystem: 'geo'\r\n  }))\r\n  const dataOption = {\r\n    legend: {\r\n      data: legendArr\r\n    },\r\n    series: seriesArr\r\n  }\r\n  echartInstance.setOption(dataOption)\r\n}\r\n// 浏览器屏幕发生变化调用，屏幕适配\r\nconst screenAdapter = () => {\r\n  const titleFontSize = mapRef.value.offsetWidth / 100 * 3.6\r\n  const adapterOption = {\r\n    title: {\r\n      textStyle: {\r\n        fontSize: titleFontSize\r\n      }\r\n    },\r\n    legend: {\r\n      itemWidth: titleFontSize / 2,\r\n      itemHeight: titleFontSize / 2,\r\n      itemGap: titleFontSize / 2,\r\n      textStyle: {\r\n        fontSize: titleFontSize / 2\r\n      }\r\n    }\r\n  }\r\n  echartInstance.setOption(adapterOption)\r\n  echartInstance.resize()\r\n}\r\n\r\nonUnmounted(() => {\r\n  // 取消监听\r\n  window.removeEventListener('resize', screenAdapter)\r\n})\r\n\r\n// 双击重新回到中国地图\r\nconst revertMap = () => {\r\n  const revertOption = {\r\n    geo: {\r\n      map: 'china'\r\n    }\r\n  }\r\n  echartInstance.setOption(revertOption)\r\n}\r\n\r\n// 组件创建注册回调函数\r\nproxy.$socket.registerCallBack('mapData', getData)\r\n// 组件销毁注销回调函数\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('mapData')\r\n})\r\nonMounted(() => {\r\n  // 发送数据给服务器\r\n  proxy.$socket.send({\r\n    action: 'getData',\r\n    socketType: 'mapData',\r\n    chartName: 'map',\r\n    value: ''\r\n  })\r\n})\r\n\r\n// 让父组件可拿到自己方法\r\ndefineExpose({\r\n  screenAdapter\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"com-container\" @dblclick=\"revertMap\">\r\n    <div class=\"com-chart\" ref=\"mapRef\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped></style>\r\n","import script from \"./Map.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Map.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst store = useStoreStore()\r\n\r\n// 监听主题变化\r\nconst theme = computed(() => store.theme)\r\nwatch(\r\n  () => theme.value,\r\n  (newValue, oldValue) => {\r\n    console.log('主题切换了')\r\n    // 1.销毁图表实例\r\n    echartInstance.dispose()\r\n    // 2.重新初始化图表实例\r\n    initChart()\r\n    // 3.屏幕适配\r\n    screenAdapter()\r\n    // 4.更新图表数据\r\n    updateChart()\r\n  }\r\n)\r\n\r\n// 图表实例\r\nlet echartInstance = null\r\n// 图表 dom 元素\r\nconst rankRef = ref(null)\r\n// 图表数据\r\nconst allData = ref(null)\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  // getData()\r\n})\r\n// 窗口变化\r\nonMounted(() => {\r\n  window.addEventListener('resize', screenAdapter)\r\n  // 开始也要执行一次\r\n  screenAdapter()\r\n})\r\n\r\n// 初始化图表\r\nconst initChart = () => {\r\n  // 柱子颜色渐变的值\r\n  const colorArr = [\r\n    ['rgba(11, 168, 44)', 'rgba(79, 247, 120)'],\r\n    ['rgba(46, 114, 191)', 'rgba(36, 55, 81)'],\r\n    ['rgba(80, 82, 238)', 'rgba(171, 110, 229)']\r\n  ]\r\n\r\n  echartInstance = proxy.$echarts.init(rankRef.value, theme.value)\r\n  const initOption = {\r\n    title: {\r\n      text: '▎ 地区销售排行',\r\n      top: 20,\r\n      left: 20\r\n    },\r\n    grid: {\r\n      top: '40%',\r\n      left: '5%',\r\n      right: '5%',\r\n      bottom: '5%',\r\n      containLabel: true\r\n    },\r\n    tooltip: {\r\n      show: true\r\n    },\r\n    xAxis: {\r\n      type: 'category'\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        itemStyle: {\r\n          color: arg => {\r\n            let targetColorArr = null\r\n            if (arg.value > 300) {\r\n              targetColorArr = colorArr[0]\r\n            } else if (arg.value > 200) {\r\n              targetColorArr = colorArr[1]\r\n            } else {\r\n              targetColorArr = colorArr[2]\r\n            }\r\n            return new proxy.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              {\r\n                offset: 0,\r\n                color: targetColorArr[0]\r\n              },\r\n              {\r\n                offset: 1,\r\n                color: targetColorArr[1]\r\n              }\r\n            ])\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(initOption)\r\n\r\n  // 对图标对象进行数据事件的监听\r\n  echartInstance.on('mouseover', () => {\r\n    clearInterval(timerId.value)\r\n  })\r\n  echartInstance.on('mouseout', () => {\r\n    startInterval()\r\n  })\r\n}\r\n\r\n// 获取图表数据\r\nconst getData = async (res) => {\r\n  // const { data: res } = await proxy.$http.get('/rank')\r\n  console.log(res)\r\n  allData.value = res\r\n  // 从大到小进行排序\r\n  allData.value.sort((a, b) => b.value - a.value)\r\n  updateChart()\r\n  startInterval()\r\n}\r\n// 更新图表\r\n// 区域缩放起点值\r\nconst startValue = ref(0)\r\n// 区域缩放终点值\r\nconst endValue = ref(9)\r\nconst updateChart = () => {\r\n  // 处理数据\r\n  // 生成省份的数值\r\n  const provinceArr = allData.value.map(item => item.name)\r\n  // 省份对应的销售金额\r\n  const valueArr = allData.value.map(item => item.value)\r\n  const dataOption = {\r\n    xAxis: {\r\n      data: provinceArr\r\n    },\r\n    // 区域缩放\r\n    dataZoom: [\r\n      {\r\n        show: false,\r\n        startValue: startValue.value,\r\n        endValue: endValue.value\r\n      }\r\n    ],\r\n    series: [\r\n      {\r\n        data: valueArr\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(dataOption)\r\n}\r\n// 浏览器屏幕发生变化调用，屏幕适配\r\nconst screenAdapter = () => {\r\n  const titleFontSize = rankRef.value.offsetWidth / 100 * 3.6\r\n  const adapterOption = {\r\n    title: {\r\n      textStyle: {\r\n        fontSize: titleFontSize\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        barWidth: titleFontSize,\r\n        itemStyle: {\r\n          barBorderRadius: [titleFontSize / 2, titleFontSize / 2, 0, 0]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(adapterOption)\r\n  echartInstance.resize()\r\n}\r\n\r\n// 变化\r\nconst timerId = ref(null)\r\nconst startInterval = () => {\r\n  if (timerId.value) clearInterval(timerId)\r\n  timerId.value = setInterval(() => {\r\n    startValue.value++\r\n    endValue.value++\r\n    if (endValue.value > allData.value.length - 1) {\r\n      startValue.value = 0\r\n      endValue.value = 9\r\n    }\r\n    updateChart()\r\n  }, 2000)\r\n}\r\n\r\nonUnmounted(() => {\r\n  // 取消监听\r\n  window.removeEventListener('resize', screenAdapter)\r\n  clearInterval(timerId)\r\n})\r\n\r\n// 组件创建注册回调函数\r\nproxy.$socket.registerCallBack('rankData', getData)\r\n// 组件销毁注销回调函数\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('rankData')\r\n})\r\nonMounted(() => {\r\n  // 发送数据给服务器\r\n  proxy.$socket.send({\r\n    action: 'getData',\r\n    socketType: 'rankData',\r\n    chartName: 'rank',\r\n    value: ''\r\n  })\r\n})\r\n\r\n// 让父组件可拿到自己方法\r\ndefineExpose({\r\n  screenAdapter\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" ref=\"rankRef\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped></style>\r\n","import script from \"./Rank.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Rank.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst store = useStoreStore()\r\n\r\n// 监听主题变化\r\nconst theme = computed(() => store.theme)\r\nwatch(\r\n  () => theme.value,\r\n  (newValue, oldValue) => {\r\n    console.log('主题切换了')\r\n    // 1.销毁图表实例\r\n    echartInstance.dispose()\r\n    // 2.重新初始化图表实例\r\n    initChart()\r\n    // 3.屏幕适配\r\n    screenAdapter()\r\n    // 4.更新图表数据\r\n    updateChart()\r\n  }\r\n)\r\n\r\n// 图表 dom 元素\r\nconst sellerRef = ref(null)\r\n// 图表的实例 --- 大坑不要用响应式定义实例\r\nlet echartInstance = null\r\n// 服务器返回的图表数据\r\nconst allData = ref(null)\r\n\r\nconst limit = ref({\r\n  // 当前显示页数\r\n  currentPage: 1,\r\n  // 一共多少页\r\n  totalPage: 0,\r\n  // 定时器标识\r\n  timerId: null\r\n})\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  // getData()\r\n})\r\n// 窗口变化\r\nonMounted(() => {\r\n  window.addEventListener('resize', screenAdapter)\r\n  // 开始也要执行一次\r\n  screenAdapter()\r\n})\r\n\r\n// 初始化 echartInstance 对象\r\nconst initChart = () => {\r\n  echartInstance = proxy.$echarts.init(sellerRef.value, theme.value)\r\n\r\n  const option = {\r\n    title: {\r\n      text: '▎ 商家销量统计',\r\n      textStyle: {\r\n        fontSize: 66\r\n      },\r\n      left: 20,\r\n      top: 20\r\n    },\r\n    grid: {\r\n      top: '20%',\r\n      left: '3%',\r\n      right: '6%',\r\n      bottom: '3%',\r\n      // 是否包含坐标轴的刻度标签\r\n      containLabel: true\r\n    },\r\n    xAxis: {\r\n      type: 'value'\r\n    },\r\n    yAxis: {\r\n      type: 'category'\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      axisPointer: {\r\n        type: 'line',\r\n        z: 0,\r\n        lineStyle: {\r\n          color: '#2D3443',\r\n          width: 66\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'bar',\r\n        // 柱子的宽度\r\n        barWidth: 66,\r\n        label: {\r\n          show: true,\r\n          position: 'right',\r\n          textStyle: {\r\n            color: '#fff'\r\n          }\r\n        },\r\n        itemStyle: {\r\n          barBorderRadius: [0, 33, 33, 0],\r\n          // 指明颜色渐变的方向\r\n          // 指明不同百分比之下颜色的值\r\n          color: new proxy.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n            // 0% 处的颜色\r\n            { offset: 0, color: '#5052EE' },\r\n            // 100% 处的颜色\r\n            { offset: 1, color: '#AB6EE5' }\r\n          ])\r\n        }\r\n      }\r\n    ]\r\n  }\r\n\r\n  echartInstance.setOption(option)\r\n\r\n  // 对图标对象进行数据事件的监听\r\n  echartInstance.on('mouseover', () => {\r\n    console.log('mouseover')\r\n    clearInterval(limit.value.timerId)\r\n  })\r\n  echartInstance.on('mouseout ', () => {\r\n    console.log('mouseout')\r\n    startInterval()\r\n  })\r\n}\r\n// 获取服务器数据\r\nconst getData = async (res) => {\r\n  // const { data: res } = await proxy.$http.get('/seller')\r\n  console.log(res)\r\n  allData.value = res\r\n  // 从小到大排序\r\n  allData.value.sort((a, b) => a.value - b.value)\r\n  // 每五个元素显示一页\r\n  limit.value.totalPage = allData.value.length % 5 === 0 ? allData.value.length / 5 : allData.value.length / 5 + 1\r\n  updateChart()\r\n  // 启动定时器\r\n  startInterval()\r\n}\r\n// 更新图表\r\nconst updateChart = () => {\r\n  const start = (limit.value.currentPage - 1) * 5\r\n  const end = limit.value.currentPage * 5\r\n  const showData = allData.value.slice(start, end)\r\n  const dataOption = {\r\n    yAxis: {\r\n      data: showData.map(item => item.name)\r\n    },\r\n    series: [\r\n      {\r\n        data: showData.map(item => item.value)\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(dataOption)\r\n}\r\n// startInterval\r\nconst startInterval = () => {\r\n  if (limit.value.timerId) clearInterval(limit.value.timerId)\r\n  limit.value.timerId = setInterval(() => {\r\n    limit.value.currentPage++\r\n    if (limit.value.currentPage > limit.value.totalPage) {\r\n      limit.value.currentPage = 1\r\n    }\r\n    updateChart()\r\n  }, 3000)\r\n}\r\n// 浏览器屏幕发生变化调用，屏幕适配\r\nconst screenAdapter = () => {\r\n  const titleFontSize = sellerRef.value.offsetWidth / 100 * 3.6\r\n  const adapterOption = {\r\n    title: {\r\n      textStyle: {\r\n        fontSize: titleFontSize\r\n      }\r\n    },\r\n    tooltip: {\r\n      axisPointer: {\r\n        lineStyle: {\r\n          width: titleFontSize\r\n        }\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        // 柱子的宽度\r\n        barWidth: titleFontSize,\r\n        itemStyle: {\r\n          barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(adapterOption)\r\n  echartInstance.resize()\r\n}\r\n\r\nonUnmounted(() => {\r\n  // 销毁定时器\r\n  clearInterval(limit.value.timerId)\r\n  // // 销毁图表实例\r\n  // echartInstance.dispose()\r\n  // 移除窗口变化事件\r\n  window.removeEventListener('resize', screenAdapter)\r\n})\r\n\r\n// 组件创建注册回调函数\r\nproxy.$socket.registerCallBack('sellerData', getData)\r\n// 组件销毁注销回调函数\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('sellerData')\r\n})\r\nonMounted(() => {\r\n  // 发送数据给服务器\r\n  proxy.$socket.send({\r\n    action: 'getData',\r\n    socketType: 'sellerData',\r\n    chartName: 'seller',\r\n    value: ''\r\n  })\r\n})\r\n\r\n// 让父组件可拿到自己方法\r\ndefineExpose({\r\n  screenAdapter\r\n})\r\n</script>\r\n\r\n<template>\r\n  <!-- 商家销量统计横向柱状图 -->\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" ref=\"sellerRef\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped></style>\r\n","import script from \"./Seller.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Seller.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst store = useStoreStore()\r\n\r\n// 监听主题变化\r\nconst theme = computed(() => store.theme)\r\nwatch(\r\n  () => theme.value,\r\n  (newValue, oldValue) => {\r\n    console.log('主题切换了')\r\n    // 1.销毁图表实例\r\n    echartInstance.dispose()\r\n    // 2.重新初始化图表实例\r\n    initChart()\r\n    // 3.屏幕适配\r\n    screenAdapter()\r\n    // 4.更新图表数据\r\n    updateChart()\r\n  }\r\n)\r\n\r\n// 图表实例\r\nlet echartInstance = null\r\n// 图表 dom 元素\r\nconst stockRef = ref(null)\r\n// 图表数据\r\nconst allData = ref(null)\r\n\r\nconst currentIndex = ref(0)\r\nconst timerId = ref(null)\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  // getData()\r\n})\r\n// 窗口变化\r\nonMounted(() => {\r\n  window.addEventListener('resize', screenAdapter)\r\n  // 开始也要执行一次\r\n  screenAdapter()\r\n})\r\n\r\n// 初始化图表\r\nconst initChart = () => {\r\n  echartInstance = proxy.$echarts.init(stockRef.value, theme.value)\r\n  const initOption = {\r\n    title: {\r\n      text: '▎ 库存和销量分析',\r\n      top: 20,\r\n      left: 20\r\n    }\r\n  }\r\n  echartInstance.setOption(initOption)\r\n\r\n  // 对图标对象进行数据事件的监听\r\n  echartInstance.on('mouseover', () => {\r\n    console.log('mouseover')\r\n    clearInterval(timerId.value)\r\n  })\r\n  echartInstance.on('mouseout ', () => {\r\n    console.log('mouseout')\r\n    startInterval()\r\n  })\r\n}\r\n// 获取图表数据\r\nconst getData = async (res) => {\r\n  // const { data: res } = await proxy.$http.get('/stock')\r\n  console.log(res)\r\n  allData.value = res\r\n  updateChart()\r\n  startInterval()\r\n}\r\n// 更新图表\r\nconst updateChart = () => {\r\n  // 处理数据\r\n  const centerArr = [\r\n    ['18%', '40%'],\r\n    ['50%', '40%'],\r\n    ['82%', '40%'],\r\n    ['34%', '75%'],\r\n    ['66%', '75%']\r\n  ]\r\n  const colorArr = [\r\n    ['#4FF778', '#0BA82C'],\r\n    ['#E5DD45', '#E8B11C'],\r\n    ['#E8821C', '#E55445'],\r\n    ['#5052EE', '#AB6EE5'],\r\n    ['#23E5E5', '#2E72BF']\r\n  ]\r\n\r\n  const start = currentIndex.value * 5\r\n  const end = (currentIndex.value + 1) * 5\r\n\r\n  const showData = allData.value.slice(start, end)\r\n  const seriesArr = showData.map((item, index) => ({\r\n    type: 'pie',\r\n    center: centerArr[index],\r\n    hoverAnimation: false, // 关闭鼠标移入时的动画效果\r\n    labelLine: {\r\n      show: false // 关闭指示线\r\n    },\r\n    label: {\r\n      position: 'center',\r\n      color: colorArr[index][0]\r\n    },\r\n    data: [\r\n      {\r\n        value: item.sales,\r\n        name: `${item.name} \\n\\n ${item.sales}`,\r\n        itemStyle: {\r\n          color: new proxy.$echarts.graphic.LinearGradient(0, 1, 0, 0, [\r\n            {\r\n              offset: 0,\r\n              color: colorArr[index][0]\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: colorArr[index][1]\r\n            }\r\n          ])\r\n        }\r\n      },\r\n      {\r\n        value: item.stock,\r\n        itemStyle: {\r\n          color: '#333843'\r\n        }\r\n      }\r\n    ]\r\n  }))\r\n  const dataOption = {\r\n    series: seriesArr\r\n  }\r\n  echartInstance.setOption(dataOption)\r\n}\r\n// 浏览器屏幕发生变化调用，屏幕适配\r\nconst screenAdapter = () => {\r\n  const titleFontSize = stockRef.value.offsetWidth / 100 * 3.6\r\n  const innerRadius = titleFontSize * 3\r\n  const outerRadius = innerRadius * 1.1\r\n  const adapterOption = {\r\n    title: {\r\n      textStyle: {\r\n        fontSize: titleFontSize\r\n      }\r\n    },\r\n    series: [\r\n      {\r\n        type: 'pie',\r\n        radius: [outerRadius, innerRadius],\r\n        label: {\r\n          fontSize: titleFontSize / 1.5\r\n        }\r\n      },\r\n      {\r\n        type: 'pie',\r\n        radius: [outerRadius, innerRadius],\r\n        label: {\r\n          fontSize: titleFontSize / 1.5\r\n        }\r\n      },\r\n      {\r\n        type: 'pie',\r\n        radius: [outerRadius, innerRadius],\r\n        label: {\r\n          fontSize: titleFontSize / 1.5\r\n        }\r\n      },\r\n      {\r\n        type: 'pie',\r\n        radius: [outerRadius, innerRadius],\r\n        label: {\r\n          fontSize: titleFontSize / 1.5\r\n        }\r\n      },\r\n      {\r\n        type: 'pie',\r\n        radius: [outerRadius, innerRadius],\r\n        label: {\r\n          fontSize: titleFontSize / 1.5\r\n        }\r\n      }\r\n    ]\r\n  }\r\n  echartInstance.setOption(adapterOption)\r\n  echartInstance.resize()\r\n}\r\n\r\n// 启动定时器\r\nconst startInterval = () => {\r\n  if (timerId.value) clearInterval(timerId.value)\r\n  timerId.value = setInterval(() => {\r\n    currentIndex.value++\r\n    if (currentIndex.value > 1) currentIndex.value = 0\r\n    updateChart()\r\n  }, 3000)\r\n}\r\n\r\nonUnmounted(() => {\r\n  // 取消监听\r\n  window.removeEventListener('resize', screenAdapter)\r\n\r\n  clearInterval(timerId.value)\r\n})\r\n\r\n// 组件创建注册回调函数\r\nproxy.$socket.registerCallBack('stockData', getData)\r\n// 组件销毁注销回调函数\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('stockData')\r\n})\r\nonMounted(() => {\r\n  // 发送数据给服务器\r\n  proxy.$socket.send({\r\n    action: 'getData',\r\n    socketType: 'stockData',\r\n    chartName: 'stock',\r\n    value: ''\r\n  })\r\n})\r\n\r\n// 让父组件可拿到自己方法\r\ndefineExpose({\r\n  screenAdapter\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"com-chart\" ref=\"stockRef\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped></style>\r\n","import script from \"./Stock.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stock.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { getCurrentInstance, onMounted, ref, onUnmounted, computed, defineExpose, watch } from 'vue'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst store = useStoreStore()\r\n\r\n// 监听主题变化\r\nconst theme = computed(() => store.theme)\r\nwatch(\r\n  () => theme.value,\r\n  (newValue, oldValue) => {\r\n    console.log('主题切换了')\r\n    // 1.销毁图表实例\r\n    echartInstance.dispose()\r\n    // 2.重新初始化图表实例\r\n    initChart()\r\n    // 3.屏幕适配\r\n    screenAdapter()\r\n    // 4.更新图表数据\r\n    updateChart()\r\n  }\r\n)\r\n\r\n// 图表实例\r\nlet echartInstance = null\r\n// 图表 dom 元素\r\nconst trendRef = ref(null)\r\n// 图表数据\r\nconst allData = ref(null)\r\n\r\nonMounted(() => {\r\n  initChart()\r\n  // getData()\r\n})\r\n// 窗口变化\r\nonMounted(() => {\r\n  window.addEventListener('resize', screenAdapter)\r\n  // 开始也要执行一次\r\n  screenAdapter()\r\n})\r\n\r\n// 初始化图表\r\nconst initChart = () => {\r\n  echartInstance = proxy.$echarts.init(trendRef.value, theme.value)\r\n  const initOption = {\r\n    xAxis: {\r\n      type: 'category',\r\n      // 紧挨边缘\r\n      boundaryGap: false\r\n    },\r\n    yAxis: {\r\n      type: 'value'\r\n    },\r\n    grid: {\r\n      top: '35%',\r\n      left: '3%',\r\n      right: '4%',\r\n      bottom: '1%',\r\n      // 是否包含坐标轴的刻度标签\r\n      containLabel: true\r\n    },\r\n    tooltip: {\r\n      trigger: 'axis'\r\n    },\r\n    legend: {\r\n      left: 20,\r\n      top: '20%',\r\n      icon: 'circle'\r\n    }\r\n  }\r\n  echartInstance.setOption(initOption)\r\n}\r\n// 获取图表数据\r\nconst getData = (res) => {\r\n  // res 是服务端发送给客户端图表的数据\r\n  // const { data: res } = await proxy.$http.get('/trend')\r\n  console.log(res)\r\n  allData.value = res\r\n  updateChart()\r\n}\r\n// 更新图表\r\nconst updateChart = () => {\r\n  // 半透明的颜色值\r\n  const colorArr1 = [\r\n    'rgba(11, 168, 44, 0.5)',\r\n    'rgba(44, 110, 255, 0.5)',\r\n    'rgba(22, 242, 217, 0.5)',\r\n    'rgba(254, 33, 30, 0.5)',\r\n    'rgba(250, 105, 0, 0.5)'\r\n  ]\r\n  // 全透明的颜色值\r\n  const colorArr2 = [\r\n    'rgba(11, 168, 44, 0)',\r\n    'rgba(44, 110, 255, 0)',\r\n    'rgba(22, 242, 217, 0)',\r\n    'rgba(254, 33, 30, 0)',\r\n    'rgba(250, 105, 0, 0)'\r\n  ]\r\n\r\n  // 处理数据\r\n  // 类目轴的数据\r\n  const timeArr = allData.value.common.month\r\n  // y 轴的数据 series 下的数据\r\n  const valueArr = allData.value[choiceType.value].data\r\n  const seriesArr = valueArr.map((item, index) => ({\r\n    name: item.name,\r\n    type: 'line',\r\n    data: item.data,\r\n    // 堆叠图\r\n    stack: choiceType.value,\r\n    // 面积图\r\n    areaStyle: {\r\n      color: new proxy.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n        offset: 0,\r\n        color: colorArr1[index]\r\n      }, {\r\n        offset: 1,\r\n        color: colorArr2[index]\r\n      }])\r\n    }\r\n  }))\r\n  // 图例的数据\r\n  const legendArr = valueArr.map(item => item.name)\r\n  const dataOption = {\r\n    xAxis: {\r\n      data: timeArr\r\n    },\r\n    legend: {\r\n      data: legendArr\r\n    },\r\n    series: seriesArr\r\n  }\r\n  echartInstance.setOption(dataOption)\r\n}\r\n// 浏览器屏幕发生变化调用，屏幕适配\r\nconst screenAdapter = () => {\r\n  titleFontSize.value = trendRef.value.offsetWidth / 100 * 3.6\r\n  const adapterOption = {\r\n    // 图例大小\r\n    legend: {\r\n      itemWidth: titleFontSize.value,\r\n      itemHeight: titleFontSize.value,\r\n      // 间隔\r\n      itemGap: titleFontSize.value,\r\n      textStyle: {\r\n        fontSize: titleFontSize.value / 1.5\r\n      }\r\n    }\r\n  }\r\n  echartInstance.setOption(adapterOption)\r\n  echartInstance.resize()\r\n}\r\n\r\nonUnmounted(() => {\r\n  // 取消监听\r\n  window.removeEventListener('resize', screenAdapter)\r\n})\r\n\r\n// 选择\r\nconst showChoice = ref(false)\r\n// 显示数据类型\r\nconst choiceType = ref('map')\r\n// 切换类型\r\nconst handleSelected = (currentType) => {\r\n  choiceType.value = currentType\r\n  showChoice.value = false\r\n  updateChart()\r\n}\r\n// 显示标题\r\nconst showTitle = computed(() => {\r\n  if (!allData.value) return ''\r\n  return allData.value[choiceType.value].title\r\n})\r\n// 动态设置大小\r\nconst titleFontSize = ref(0)\r\nconst comStyle = computed(() => {\r\n  return {\r\n    fontSize: titleFontSize.value + 'px',\r\n    color: getThemeValue(theme.value).titleColor\r\n  }\r\n})\r\nconst marginStyle = computed(() => {\r\n  return {\r\n    marginLeft: titleFontSize.value + 'px',\r\n    backgroundColor: getThemeValue(theme.value).selectedBgc\r\n  }\r\n})\r\n\r\n// 组件创建注册回调函数\r\nproxy.$socket.registerCallBack('trendData', getData)\r\n// 组件销毁注销回调函数\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('trendData')\r\n})\r\nonMounted(() => {\r\n  // 发送数据给服务器\r\n  proxy.$socket.send({\r\n    action: 'getData',\r\n    socketType: 'trendData',\r\n    chartName: 'trend',\r\n    value: ''\r\n  })\r\n})\r\n\r\n// 让父组件可拿到自己方法\r\ndefineExpose({\r\n  screenAdapter\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"com-container\">\r\n    <div class=\"title\" :style=\"comStyle\">\r\n      <div @click=\"showChoice = !showChoice\">\r\n        <span>{{ '▎ ' + showTitle }}</span>\r\n        <span class=\"iconfont title-icon\" :style=\"comStyle\">&#xe6eb;</span>\r\n      </div>\r\n      <div class=\"select-con\" v-show=\"showChoice\" :style=\"marginStyle\">\r\n        <div class=\"select-item\" v-for=\"item in allData?.type\" :key=\"item.key\" v-show=\"item.key !== choiceType\"\r\n          @click=\"handleSelected(item.key)\">\r\n          {{ item.text }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"com-chart\" ref=\"trendRef\"></div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n.title {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 20px;\r\n  z-index: 10;\r\n  color: white;\r\n\r\n  .title-icon {\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./Trend.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Trend.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Trend.vue?vue&type=style&index=0&id=684347ba&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-684347ba\"]])\n\nexport default __exports__","<script setup>\r\nimport { ref, getCurrentInstance, nextTick, onUnmounted, computed, onMounted } from 'vue'\r\n\r\nimport Hot from '@/components/Hot.vue'\r\nimport Map from '@/components/Map.vue'\r\nimport Rank from '@/components/Rank.vue'\r\nimport Seller from '@/components/Seller.vue'\r\nimport Stock from '@/components/Stock.vue'\r\nimport Trend from '@/components/Trend.vue'\r\n\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\nimport { useStoreStore } from '@/store/index.js'\r\n\r\nimport { toggleFull, isFull } from 'be-full'\r\n\r\nconst store = useStoreStore()\r\n\r\nconst { proxy } = getCurrentInstance()\r\n\r\nconst theme = computed(() => store.theme)\r\nconst logoSrc = computed(() => getThemeValue(theme.value).logoSrc)\r\nconst headerSrc = computed(() => getThemeValue(theme.value).headerBorderSrc)\r\nconst themeSrc = computed(() => getThemeValue(theme.value).themeSrc)\r\nconst containerStyle = computed(() => ({\r\n  backgroundColor: getThemeValue(theme.value).backgroundColor,\r\n  color: getThemeValue(theme.value).titleColor\r\n}))\r\n\r\n// 定义每个图表的全屏状态\r\nconst fullScreenStatus = ref({\r\n  trend: false,\r\n  seller: false,\r\n  map: false,\r\n  rank: false,\r\n  hot: false,\r\n  stock: false\r\n})\r\nconst trend = ref(null)\r\nconst seller = ref(null)\r\nconst map = ref(null)\r\nconst rank = ref(null)\r\nconst hot = ref(null)\r\nconst stock = ref(null)\r\n\r\n// 全屏\r\nconst changeSize = async (chartName) => {\r\n  // 1.改变 fullScreenStatus 的数据\r\n  // 2.需要调用每一个图表组件 screenAdapter 方法\r\n  // fullScreenStatus.value[chartName] = !fullScreenStatus.value[chartName]\r\n\r\n  // await nextTick()\r\n  // proxy.$refs[chartName].screenAdapter()\r\n\r\n  // 全屏效果联动\r\n  proxy.$socket.send({\r\n    action: 'fullScreen',\r\n    socketType: 'fullScreen',\r\n    chartName: chartName,\r\n    value: !fullScreenStatus.value[chartName]\r\n  })\r\n}\r\n// 全屏切换联动\r\nconst recvData = async (data) => {\r\n  console.log(data)\r\n  // 取出是哪个图表需要进行切换，切换成什么状态\r\n  const chartName = data.chartName\r\n  const targetValue = data.value\r\n  fullScreenStatus.value[chartName] = targetValue\r\n\r\n  await nextTick()\r\n  proxy.$refs[chartName].screenAdapter()\r\n}\r\nproxy.$socket.registerCallBack('fullScreen', recvData)\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('fullScreen')\r\n})\r\n\r\n// 主题切换\r\nconst handleChangeTheme = () => {\r\n  // store.changeTheme()\r\n\r\n  // 主题切换联动\r\n  proxy.$socket.send({\r\n    action: 'themeChange',\r\n    socketType: 'themeChange',\r\n    chartName: '',\r\n    value: ''\r\n  })\r\n}\r\nconst recvThemeChange = () => {\r\n  store.changeTheme()\r\n}\r\nproxy.$socket.registerCallBack('themeChange', recvThemeChange)\r\nonUnmounted(() => {\r\n  proxy.$socket.unRegisterCallBack('themeChange')\r\n})\r\n\r\nconst time = ref('')\r\nconst timer = ref(null)\r\nonMounted(() => {\r\n  time.value = proxy.$dayjs(new Date()).format('YYYY-MM-DD HH:mm:ss')\r\n  if (timer.value) clearInterval(timer.value)\r\n  timer.value = setInterval(() => {\r\n    time.value = proxy.$dayjs(new Date()).format('YYYY-MM-DD HH:mm:ss')\r\n  }, 1000)\r\n})\r\nonUnmounted(() => {\r\n  if (timer.value) clearInterval(timer.value)\r\n})\r\n\r\n// 全屏切换按钮样式\r\nconst fullScreenClickStyle = computed(() => ({\r\n  backgroundColor: getThemeValue(theme.value === 'chalk' ? 'vintage' : 'chalk').backgroundColor,\r\n  color: getThemeValue(theme.value === 'chalk' ? 'vintage' : 'chalk').titleColor\r\n}))\r\n\r\n// 思否全屏\r\nconst isFullScreen = ref(isFull(document.documentElement))\r\nconsole.log(isFull(document.documentElement))\r\n//  全屏事件\r\nconst fullScreenClick = () => {\r\n  toggleFull(document.documentElement)\r\n  isFullScreen.value = !isFull(document.documentElement)\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"screen-container\" :style=\"containerStyle\">\r\n    <header class=\"screen-header\">\r\n      <div>\r\n        <img :src=\"headerSrc\" alt=\"\">\r\n      </div>\r\n      <span class=\"logo\">\r\n        <img :src=\"logoSrc\" alt=\"\">\r\n        <!-- LOGO -->\r\n      </span>\r\n      <span class=\"title\">电商平台实时监控系统</span>\r\n      <div class=\"title-right\">\r\n        <img :src=\"themeSrc\" class=\"qiehuan\" @click=\"handleChangeTheme\">\r\n        <button class=\"full-screen-click\" :style=\"fullScreenClickStyle\" @click=\"fullScreenClick\">{{ !isFullScreen ? '全屏' :\r\n          '退出全屏' }}</button>\r\n        <span class=\"datetime\">{{ time }}</span>\r\n      </div>\r\n    </header>\r\n    <div class=\"screen-body\">\r\n      <section class=\"screen-left\">\r\n        <div id=\"left-top\" :class=\"[fullScreenStatus.trend && 'fullscreen']\">\r\n          <!-- 销量趋势图表 -->\r\n          <Trend ref=\"trend\" />\r\n          <div class=\"resize\" @click=\"changeSize('trend')\">\r\n            <span :class=\"['iconfont', fullScreenStatus.trend ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\r\n          </div>\r\n        </div>\r\n        <div id=\"left-bottom\" :class=\"[fullScreenStatus.seller && 'fullscreen']\">\r\n          <!-- 商家销售金额图表 -->\r\n          <Seller ref=\"seller\" />\r\n          <div class=\"resize\" @click=\"changeSize('seller')\">\r\n            <span :class=\"['iconfont', fullScreenStatus.seller ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section class=\"screen-middle\">\r\n        <div id=\"middle-top\" :class=\"[fullScreenStatus.map && 'fullscreen']\">\r\n          <!-- 商家分布图表 -->\r\n          <Map ref=\"map\" />\r\n          <div class=\"resize\" @click=\"changeSize('map')\">\r\n            <span :class=\"['iconfont', fullScreenStatus.map ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\r\n          </div>\r\n        </div>\r\n        <div id=\"middle-bottom\" :class=\"[fullScreenStatus.rank && 'fullscreen']\">\r\n          <!-- 地区销量排行图表 -->\r\n          <Rank ref=\"rank\" />\r\n          <div class=\"resize\" @click=\"changeSize('rank')\">\r\n            <span :class=\"['iconfont', fullScreenStatus.rank ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section class=\"screen-right\">\r\n        <div id=\"right-top\" :class=\"[fullScreenStatus.hot && 'fullscreen']\">\r\n          <!-- 热销商品占比图表 -->\r\n          <Hot ref=\"hot\" />\r\n          <div class=\"resize\" @click=\"changeSize('hot')\">\r\n            <span :class=\"['iconfont', fullScreenStatus.hot ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\r\n          </div>\r\n        </div>\r\n        <div id=\"right-bottom\" :class=\"[fullScreenStatus.stock && 'fullscreen']\">\r\n          <!-- 库存销量分析图表 -->\r\n          <Stock ref=\"stock\" />\r\n          <div class=\"resize\" @click=\"changeSize('stock')\">\r\n            <span :class=\"['iconfont', fullScreenStatus.stock ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n// 全屏样式的定义\r\n// 全屏样式的定义\r\n.fullscreen {\r\n  position: fixed !important;\r\n  top: 0 !important;\r\n  left: 0 !important;\r\n  width: 100% !important;\r\n  height: 100% !important;\r\n  margin: 0 !important;\r\n  z-index: 100;\r\n}\r\n\r\n.screen-container {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0 20px;\r\n  background-color: #161522;\r\n  color: #fff;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.screen-header {\r\n  width: 100%;\r\n  height: 64px;\r\n  font-size: 20px;\r\n  position: relative;\r\n\r\n  > div {\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .title {\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    transform: translate(-50%, -50%);\r\n  }\r\n\r\n  .title-right {\r\n    display: flex;\r\n    align-items: center;\r\n    position: absolute;\r\n    right: 0px;\r\n    top: 50%;\r\n    transform: translateY(-80%);\r\n  }\r\n\r\n  .qiehuan {\r\n    width: 28px;\r\n    height: 21px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .datetime {\r\n    font-size: 15px;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  .logo {\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 50%;\r\n    transform: translateY(-80%);\r\n\r\n    img {\r\n      height: 35px;\r\n      width: 128px;\r\n    }\r\n  }\r\n}\r\n\r\n.screen-body {\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  margin-top: 10px;\r\n\r\n  .screen-left {\r\n    height: 100%;\r\n    width: 27.6%;\r\n\r\n    #left-top {\r\n      height: 53%;\r\n      position: relative;\r\n    }\r\n\r\n    #left-bottom {\r\n      height: 31%;\r\n      margin-top: 25px;\r\n      position: relative;\r\n    }\r\n  }\r\n\r\n  .screen-middle {\r\n    height: 100%;\r\n    width: 41.5%;\r\n    margin-left: 1.6%;\r\n    margin-right: 1.6%;\r\n\r\n    #middle-top {\r\n      width: 100%;\r\n      height: 56%;\r\n      position: relative;\r\n    }\r\n\r\n    #middle-bottom {\r\n      margin-top: 25px;\r\n      width: 100%;\r\n      height: 28%;\r\n      position: relative;\r\n    }\r\n  }\r\n\r\n  .screen-right {\r\n    height: 100%;\r\n    width: 27.6%;\r\n\r\n    #right-top {\r\n      height: 46%;\r\n      position: relative;\r\n    }\r\n\r\n    #right-bottom {\r\n      height: 38%;\r\n      margin-top: 25px;\r\n      position: relative;\r\n    }\r\n  }\r\n}\r\n\r\n.resize {\r\n  position: absolute;\r\n  right: 20px;\r\n  top: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.full-screen-click {\r\n  padding: 3px 10px;\r\n  margin-left: 10px;\r\n  border: none;\r\n  border-radius: 3px;\r\n}\r\n</style>\r\n","import script from \"./ScreenPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ScreenPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ScreenPage.vue?vue&type=style&index=0&id=42683992&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-42683992\"]])\n\nexport default __exports__"],"names":["exports","e","document","documentElement","l","querySelector","n","createElement","t","u","r","c","HTMLElement","o","innerHTML","appendChild","i","contains","removeChild","F","m","sfc","props","target","__vccOpts","key","val","useStoreStore","defineStore","count","ref","increment","value","theme","changeTheme","headerBorderDarkSrc","require","headerBorderLightSrc","themeDarkSrc","themeLightSrc","logoDarkSrc","logoLightSrc","chalk","backgroundColor","titleColor","logoSrc","themeSrc","headerBorderSrc","selectedBgc","vintage","getThemeValue","themeValue","proxy","getCurrentInstance","store","computed","watch","newValue","oldValue","console","log","echartInstance","dispose","initChart","screenAdapter","updateChart","hotRef","allData","currentIndex","titleFontSize","onMounted","window","addEventListener","$echarts","init","initOption","title","text","top","left","legend","icon","tooltip","show","formatter","arg","thirdCategory","data","children","total","reduce","item","resStr","str","name","parseInt","series","type","label","emphasis","labelLine","setOption","getData","async","res","seriesData","map","legendData","dataOption","offsetWidth","adapterOption","textStyle","fontSize","itemWidth","itemHeight","itemGap","radius","center","resize","onUnmounted","removeEventListener","toLeft","length","toRight","catName","comStyle","color","$socket","registerCallBack","unRegisterCallBack","send","action","socketType","chartName","__expose","__exports__","name2pinyin","安徽","陕西","澳门","北京","重庆","福建","甘肃","广东","广西","贵州","海南","河北","黑龙江","河南","湖北","湖南","江苏","江西","吉林","辽宁","内蒙古","宁夏","青海","山东","上海","山西","四川","台湾","天津","香港","新疆","西藏","云南","浙江","getProvinceMapInfo","path","mapRef","mapData","axios","get","registerMap","geo","roam","bottom","itemStyle","areaColor","borderColor","orient","on","provinceInfo","arr","includes","changeOption","legendArr","seriesArr","rippleEffect","scale","brushType","coordinateSystem","revertMap","revertOption","rankRef","colorArr","grid","right","containLabel","xAxis","yAxis","targetColorArr","graphic","LinearGradient","offset","clearInterval","timerId","startInterval","sort","a","b","startValue","endValue","provinceArr","valueArr","dataZoom","barWidth","barBorderRadius","setInterval","sellerRef","limit","currentPage","totalPage","option","trigger","axisPointer","z","lineStyle","width","position","start","end","showData","slice","stockRef","centerArr","index","hoverAnimation","sales","stock","innerRadius","outerRadius","trendRef","boundaryGap","colorArr1","colorArr2","timeArr","common","month","choiceType","stack","areaStyle","showChoice","handleSelected","currentType","showTitle","marginStyle","marginLeft","headerSrc","containerStyle","fullScreenStatus","trend","seller","rank","hot","changeSize","recvData","targetValue","nextTick","$refs","handleChangeTheme","recvThemeChange","time","timer","$dayjs","Date","format","fullScreenClickStyle","isFullScreen","isFull","fullScreenClick","toggleFull"],"sourceRoot":""}