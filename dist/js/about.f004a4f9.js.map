{"version":3,"file":"js/about.f004a4f9.js","mappings":"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","sources":["webpack://vision/./node_modules/be-full/dist/main.min.js","webpack://vision/./node_modules/vue-loader/dist/exportHelper.js","webpack://vision/./src/store/index.js","webpack://vision/./src/utils/theme_utils.js","webpack://vision/./src/components/Hot.vue","webpack://vision/./src/components/Hot.vue?a0cd","webpack://vision/./src/utils/map_utils.js","webpack://vision/./src/components/Map.vue","webpack://vision/./src/components/Map.vue?8a65","webpack://vision/./src/components/Rank.vue","webpack://vision/./src/components/Rank.vue?720d","webpack://vision/./src/components/Seller.vue","webpack://vision/./src/components/Seller.vue?cc9d","webpack://vision/./src/components/Stock.vue","webpack://vision/./src/components/Stock.vue?2611","webpack://vision/./src/components/Trend.vue","webpack://vision/./src/components/Trend.vue?ff2e","webpack://vision/./src/views/ScreenPage.vue","webpack://vision/./src/views/ScreenPage.vue?8adc"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.toggleFull=exports.isFull=exports.exitFull=exports.beFull=void 0;var e=document.documentElement,l=e.querySelector(\"head\"),n=document.createElement(\"style\"),t=\"requestFullscreen\",u=\"exitFullscreen\",r=\"fullscreenElement\",s=\"onfullscreenchange\";if(\"webkitRequestFullScreen\"in e)t=\"webkitRequestFullScreen\",u=\"webkitExitFullscreen\",r=\"webkitFullscreenElement\",s=\"onwebkitfullscreenchange\";else if(\"msRequestFullscreen\"in e)t=\"msRequestFullscreen\",u=\"msExitFullscreen\",r=\"msFullscreenElement\",s=\"MSFullscreenChange\";else if(\"mozRequestFullScreen\"in e)t=\"mozRequestFullScreen\",u=\"mozCancelFullScreen\",r=\"mozFullScreenElement\",s=\"onmozfullscreenchange\";else if(!(\"requestFullscreen\"in e))throw\"当前浏览器不支持Fullscreen API !\";function c(l){return l instanceof HTMLElement?l:e}function o(e,u){return u&&(null===l&&(l=document.createElement(\"head\")),n.innerHTML=\":fullscreen{background-color:\"+u+\";}\",l.appendChild(n)),c(e)[t]()}function i(){return e.contains(n)&&(null==l||l.removeChild(n)),document[u]()}function F(e){return c(e)===document[r]}function m(e,l){return F(e)?(i(),!1):(o(e,l),!0)}exports.beFull=o,exports.exitFull=i,exports.isFull=F,exports.toggleFull=m;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { defineStore } from 'pinia'\nimport { ref } from 'vue'\n\nexport const useStoreStore = defineStore('store', () => {\n  const count = ref(0)\n  function increment () {\n    count.value++\n  }\n\n  const theme = ref('chalk')\n  const changeTheme = () => {\n    theme.value = theme.value === 'chalk' ? 'vintage' : 'chalk'\n  }\n\n  return {\n    count,\n    increment,\n    theme,\n    changeTheme\n  }\n})\n","const headerBorderDarkSrc = require('../assets/img/header_border_dark.png')\nconst headerBorderLightSrc = require('../assets/img/header_border_light.png')\nconst themeDarkSrc = require('../assets/img/qiehuan_dark.png')\nconst themeLightSrc = require('../assets/img/qiehuan_light.png')\nconst logoDarkSrc = require('../assets/img/logo_dark.png')\nconst logoLightSrc = require('../assets/img/logo_light.png')\n\nconst theme = {\n  chalk: {\n    // 背景颜色\n    backgroundColor: '#161522',\n    // 标题文字颜色\n    titleColor: '#fff',\n    // LOGO\n    logoSrc: logoDarkSrc,\n    // 切换主题按钮的图片路径\n    themeSrc: themeDarkSrc,\n    // 主页顶部边框图片路径\n    headerBorderSrc: headerBorderDarkSrc,\n\n    selectedBgc: '#222733'\n  },\n  vintage: {\n    // 背景颜色\n    backgroundColor: '#eee',\n    // 标题文字颜色\n    titleColor: '#111',\n    // LOGO\n    logoSrc: logoLightSrc,\n    // 切换主题按钮的图片路径\n    themeSrc: themeLightSrc,\n    // 主页顶部边框图片路径\n    headerBorderSrc: headerBorderLightSrc,\n\n    selectedBgc: '#fff'\n  }\n}\n\nexport function getThemeValue (themeValue) {\n  return theme[themeValue]\n}\n","<script setup>\nimport { getCurrentInstance, onMounted, ref, onUnmounted, computed, defineExpose, watch } from 'vue'\nimport { useStoreStore } from '@/store/index.js'\n\nimport { getThemeValue } from '@/utils/theme_utils'\n\nconst { proxy } = getCurrentInstance()\n\nconst store = useStoreStore()\n\n// 监听主题变化\nconst theme = computed(() => store.theme)\nwatch(\n  () => theme.value,\n  (newValue, oldValue) => {\n    console.log('主题切换了')\n    // 1.销毁图表实例\n    echartInstance.dispose()\n    // 2.重新初始化图表实例\n    initChart()\n    // 3.屏幕适配\n    screenAdapter()\n    // 4.更新图表数据\n    updateChart()\n  }\n)\n\n// 图表实例\nlet echartInstance = null\n// 图表 dom 元素\nconst hotRef = ref(null)\n// 图表数据\nconst allData = ref(null)\n// 饼图切换\nconst currentIndex = ref(0)\n\nconst titleFontSize = ref(0)\n\nonMounted(() => {\n  initChart()\n  // getData()\n})\n// 窗口变化\nonMounted(() => {\n  window.addEventListener('resize', screenAdapter)\n  // 开始也要执行一次\n  screenAdapter()\n})\n\n// 初始化图表\nconst initChart = () => {\n  echartInstance = proxy.$echarts.init(hotRef.value, theme.value)\n  const initOption = {\n    title: {\n      text: '▎ 热销商品销售金额占比统计',\n      top: 20,\n      left: 20\n    },\n    legend: {\n      top: '15%',\n      icon: 'circle'\n    },\n    tooltip: {\n      show: true,\n      formatter: (arg) => {\n        const thirdCategory = arg.data.children\n        // 计算所有三级分类数值总和\n        const total = thirdCategory.reduce((total, item) => total + item.value, 0)\n        const resStr = thirdCategory.reduce((str, item) => (str + `${item.name}: ${parseInt(item.value / total * 100)}%<br />`\n        ), '')\n        return resStr\n      }\n    },\n    series: [\n      {\n        type: 'pie',\n        // label: {\n        //   show: false\n        // },\n        emphasis: {\n          // label: {\n          //   show: true\n          // },\n          // labelLine: {\n          //   show: false\n          // }\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(initOption)\n}\n// 获取图表数据\nconst getData = async (res) => {\n  // const { data: res } = await proxy.$http.get('/hot')\n  console.log(res)\n  allData.value = res\n  updateChart()\n}\n// 更新图表\nconst updateChart = () => {\n  // 处理数据\n  const seriesData = allData.value[currentIndex.value].children.map((item) => ({\n    name: item.name,\n    value: item.value,\n    children: item.children\n  }))\n  // 图例\n  const legendData = allData.value[currentIndex.value].children.map((item) => item.name)\n  const dataOption = {\n    legend: {\n      data: legendData\n    },\n    series: [\n      {\n        data: seriesData\n      }\n    ]\n  }\n  echartInstance.setOption(dataOption)\n}\n// 浏览器屏幕发生变化调用，屏幕适配\nconst screenAdapter = () => {\n  titleFontSize.value = hotRef.value.offsetWidth / 100 * 3.6\n  const adapterOption = {\n    title: {\n      textStyle: {\n        fontSize: titleFontSize.value\n      }\n    },\n    legend: {\n      itemWidth: titleFontSize.value,\n      itemHeight: titleFontSize.value,\n      itemGap: titleFontSize.value / 2,\n      textStyle: {\n        fontSize: titleFontSize.value / 1.5\n      }\n    },\n    series: [\n      {\n        radius: titleFontSize.value * 5,\n        center: ['50%', '60%'],\n        label: {\n          fontSize: titleFontSize.value / 1.5\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(adapterOption)\n  echartInstance.resize()\n}\n\nonUnmounted(() => {\n  // 取消监听\n  window.removeEventListener('resize', screenAdapter)\n})\n\n// 切换饼图数据\nconst toLeft = () => {\n  currentIndex.value--\n  if (currentIndex.value < 0) currentIndex.value = allData.value.length - 1\n  updateChart()\n}\nconst toRight = () => {\n  currentIndex.value++\n  if (currentIndex.value > allData.value.length - 1) currentIndex.value = 0\n  updateChart()\n}\n// 计算标题\nconst catName = computed(() => (\n  allData.value ? allData.value[currentIndex.value].name : ''\n))\n\n// 计算样式按屏幕设置大小\nconst comStyle = computed(() => ({\n  fontSize: titleFontSize.value * 1.3 + 'px',\n  color: getThemeValue(theme.value).titleColor\n}))\n\n// 组件创建注册回调函数\nproxy.$socket.registerCallBack('hotData', getData)\n// 组件销毁注销回调函数\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('hotData')\n})\nonMounted(() => {\n  // 发送数据给服务器\n  proxy.$socket.send({\n    action: 'getData',\n    socketType: 'hotData',\n    chartName: 'hot',\n    value: ''\n  })\n})\n\n// 让父组件可拿到自己方法\ndefineExpose({\n  screenAdapter\n})\n</script>\n\n<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"hotRef\"></div>\n    <span class=\"iconfont arr-left\" :style=\"comStyle\" @click=\"toLeft\">&#xe6ef;</span>\n    <span class=\"iconfont arr-right\" :style=\"comStyle\" @click=\"toRight\">&#xe6ed;</span>\n    <span class=\"cat-name\" :style=\"comStyle\">{{ catName }}</span>\n  </div>\n</template>\n\n<style lang=\"less\" scoped>\n.iconfont {\n  position: absolute;\n  top: 60%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  color: #fff;\n  font-weight: 700;\n}\n\n.arr-left {\n  left: 10%;\n}\n\n.arr-right {\n  right: 10%;\n}\n\n.cat-name {\n  position: absolute;\n  left: 80%;\n  bottom: 20px;\n  color: #fff;\n}\n</style>\n","import script from \"./Hot.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Hot.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Hot.vue?vue&type=style&index=0&id=138c608e&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-138c608e\"]])\n\nexport default __exports__","const name2pinyin = {\n  安徽: 'anhui',\n  陕西: 'shanxi1',\n  澳门: 'aomen',\n  北京: 'beijing',\n  重庆: 'chongqing',\n  福建: 'fujian',\n  甘肃: 'gansu',\n  广东: 'guangdong',\n  广西: 'guangxi',\n  贵州: 'guizhou',\n  海南: 'hainan',\n  河北: 'hebei',\n  黑龙江: 'heilongjiang',\n  河南: 'henan',\n  湖北: 'hubei',\n  湖南: 'hunan',\n  江苏: 'jiangsu',\n  江西: 'jiangxi',\n  吉林: 'jilin',\n  辽宁: 'liaoning',\n  内蒙古: 'neimenggu',\n  宁夏: 'ningxia',\n  青海: 'qinghai',\n  山东: 'shandong',\n  上海: 'shanghai',\n  山西: 'shanxi',\n  四川: 'sichuan',\n  台湾: 'taiwan',\n  天津: 'tianjin',\n  香港: 'xianggang',\n  新疆: 'xinjiang',\n  西藏: 'xizang',\n  云南: 'yunnan',\n  浙江: 'zhejiang'\n}\n\nexport function getProvinceMapInfo (arg) {\n  const path = `/static/map/province/${name2pinyin[arg]}.json`\n  return {\n    key: name2pinyin[arg],\n    path: path\n  }\n}\n","<script setup>\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\nimport axios from 'axios'\nimport { getProvinceMapInfo } from '@/utils/map_utils'\nimport { useStoreStore } from '@/store/index.js'\n\nimport { getThemeValue } from '@/utils/theme_utils'\n\nconst { proxy } = getCurrentInstance()\n\nconst store = useStoreStore()\n\n// 监听主题变化\nconst theme = computed(() => store.theme)\nwatch(\n  () => theme.value,\n  (newValue, oldValue) => {\n    console.log('主题切换了')\n    // 1.销毁图表实例\n    echartInstance.dispose()\n    // 2.重新初始化图表实例\n    initChart()\n    // 3.屏幕适配\n    screenAdapter()\n    // 4.更新图表数据\n    updateChart()\n  }\n)\n\n// 图表实例\nlet echartInstance = null\n// 图表 dom 元素\nconst mapRef = ref(null)\n// 图表数据\nconst allData = ref(null)\n// 缓存省份地图数据\nconst mapData = ref({})\n\nonMounted(() => {\n  initChart()\n  // getData()\n})\n// 窗口变化\nonMounted(() => {\n  window.addEventListener('resize', screenAdapter)\n  // 开始也要执行一次\n  screenAdapter()\n})\n\n// 初始化图表\nconst initChart = async () => {\n  echartInstance = proxy.$echarts.init(mapRef.value, theme.value)\n\n  // 获取中国矢量地图\n  const { data: res } = await axios.get('/static/map/china.json')\n  proxy.$echarts.registerMap('china', res)\n\n  const initOption = {\n    title: {\n      text: '▎ 商家分布与销量排行',\n      left: 20,\n      top: 20\n    },\n    geo: {\n      type: 'map',\n      map: 'china',\n      // 设置允许拖动和缩放\n      roam: true,\n      label: {\n        show: true,\n        color: getThemeValue(theme.value).titleColor\n      },\n      top: '5%',\n      bottom: '5%',\n      itemStyle: {\n        areaColor: '#2E72BF',\n        borderColor: '#333'\n      }\n    },\n    legend: {\n      left: '5%',\n      bottom: '5%',\n      orient: 'vertical'\n    }\n  }\n  echartInstance.setOption(initOption)\n\n  // 监听图表点击事件\n  echartInstance.on('click', async (arg) => {\n    const provinceInfo = getProvinceMapInfo(arg.name)\n    // 如果已经缓存了，就不再请求了\n    if (!mapData.value[provinceInfo.key]) {\n      // 如果是直辖市，不需要请求\n      const arr = ['北京', '天津', '上海', '重庆', '新疆', '西藏', '宁夏', '内蒙古', '广西', '黑龙江', '吉林', '辽宁', '河北', '山东', '江苏', '安徽', '浙江', '福建', '广东', '海南', '云南', '贵州', '四川', '湖南', '湖北', '河南', '山西', '陕西', '甘肃', '青海', '江西', '台湾', '香港', '澳门']\n      if (!arr.includes(arg.name) || arg.name === '南海诸岛') return\n      // 获取相应的省份地图\n      const { data: res } = await axios.get(provinceInfo.path)\n      // 缓存\n      mapData.value[provinceInfo.key] = res\n      proxy.$echarts.registerMap(provinceInfo.key, res)\n    }\n    // 切换地图显示\n    const changeOption = {\n      geo: {\n        map: provinceInfo.key\n      }\n    }\n    echartInstance.setOption(changeOption)\n  })\n}\n// 获取图表数据\nconst getData = async (res) => {\n  // const { data: res } = await proxy.$http.get('/map')\n  console.log(res)\n  allData.value = res\n  updateChart()\n}\n// 更新图表\nconst updateChart = () => {\n  // 处理数据\n  // 图例的数据\n  const legendArr = allData.value.map(item => item.name)\n  const seriesArr = allData.value.map(item => ({\n    // 一个类别下所有散点数据\n    // 如果想要在地图中显示散点的数据，需要给散点的图表增加一个 coordinateSystem 属性，值为 geo\n    type: 'effectScatter',\n    // 散点涟漪效果\n    rippleEffect: {\n      scale: 5,\n      // 空心的涟漪效果\n      brushType: 'stroke'\n    },\n    name: item.name,\n    data: item.children,\n    coordinateSystem: 'geo'\n  }))\n  const dataOption = {\n    legend: {\n      data: legendArr\n    },\n    series: seriesArr\n  }\n  echartInstance.setOption(dataOption)\n}\n// 浏览器屏幕发生变化调用，屏幕适配\nconst screenAdapter = () => {\n  const titleFontSize = mapRef.value.offsetWidth / 100 * 3.6\n  const adapterOption = {\n    title: {\n      textStyle: {\n        fontSize: titleFontSize\n      }\n    },\n    legend: {\n      itemWidth: titleFontSize / 2,\n      itemHeight: titleFontSize / 2,\n      itemGap: titleFontSize / 2,\n      textStyle: {\n        fontSize: titleFontSize / 2\n      }\n    }\n  }\n  echartInstance.setOption(adapterOption)\n  echartInstance.resize()\n}\n\nonUnmounted(() => {\n  // 取消监听\n  window.removeEventListener('resize', screenAdapter)\n})\n\n// 双击重新回到中国地图\nconst revertMap = () => {\n  const revertOption = {\n    geo: {\n      map: 'china'\n    }\n  }\n  echartInstance.setOption(revertOption)\n}\n\n// 组件创建注册回调函数\nproxy.$socket.registerCallBack('mapData', getData)\n// 组件销毁注销回调函数\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('mapData')\n})\nonMounted(() => {\n  // 发送数据给服务器\n  proxy.$socket.send({\n    action: 'getData',\n    socketType: 'mapData',\n    chartName: 'map',\n    value: ''\n  })\n})\n\n// 让父组件可拿到自己方法\ndefineExpose({\n  screenAdapter\n})\n</script>\n\n<template>\n  <div class=\"com-container\" @dblclick=\"revertMap\">\n    <div class=\"com-chart\" ref=\"mapRef\"></div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped></style>\n","import script from \"./Map.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Map.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\nimport { useStoreStore } from '@/store/index.js'\n\nimport { getThemeValue } from '@/utils/theme_utils'\n\nconst { proxy } = getCurrentInstance()\n\nconst store = useStoreStore()\n\n// 监听主题变化\nconst theme = computed(() => store.theme)\nwatch(\n  () => theme.value,\n  (newValue, oldValue) => {\n    console.log('主题切换了')\n    // 1.销毁图表实例\n    echartInstance.dispose()\n    // 2.重新初始化图表实例\n    initChart()\n    // 3.屏幕适配\n    screenAdapter()\n    // 4.更新图表数据\n    updateChart()\n  }\n)\n\n// 图表实例\nlet echartInstance = null\n// 图表 dom 元素\nconst rankRef = ref(null)\n// 图表数据\nconst allData = ref(null)\n\nonMounted(() => {\n  initChart()\n  // getData()\n})\n// 窗口变化\nonMounted(() => {\n  window.addEventListener('resize', screenAdapter)\n  // 开始也要执行一次\n  screenAdapter()\n})\n\n// 初始化图表\nconst initChart = () => {\n  // 柱子颜色渐变的值\n  const colorArr = [\n    ['rgba(11, 168, 44)', 'rgba(79, 247, 120)'],\n    ['rgba(46, 114, 191)', 'rgba(36, 55, 81)'],\n    ['rgba(80, 82, 238)', 'rgba(171, 110, 229)']\n  ]\n\n  echartInstance = proxy.$echarts.init(rankRef.value, theme.value)\n  const initOption = {\n    title: {\n      text: '▎ 地区销售排行',\n      top: 20,\n      left: 20\n    },\n    grid: {\n      top: '40%',\n      left: '5%',\n      right: '5%',\n      bottom: '5%',\n      containLabel: true\n    },\n    tooltip: {\n      show: true\n    },\n    xAxis: {\n      type: 'category'\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [\n      {\n        type: 'bar',\n        label: {\n          show: true,\n          position: 'top'\n        },\n        itemStyle: {\n          color: arg => {\n            let targetColorArr = null\n            if (arg.value > 300) {\n              targetColorArr = colorArr[0]\n            } else if (arg.value > 200) {\n              targetColorArr = colorArr[1]\n            } else {\n              targetColorArr = colorArr[2]\n            }\n            return new proxy.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\n              {\n                offset: 0,\n                color: targetColorArr[0]\n              },\n              {\n                offset: 1,\n                color: targetColorArr[1]\n              }\n            ])\n          }\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(initOption)\n\n  // 对图标对象进行数据事件的监听\n  echartInstance.on('mouseover', () => {\n    clearInterval(timerId.value)\n  })\n  echartInstance.on('mouseout', () => {\n    startInterval()\n  })\n}\n\n// 获取图表数据\nconst getData = async (res) => {\n  // const { data: res } = await proxy.$http.get('/rank')\n  console.log(res)\n  allData.value = res\n  // 从大到小进行排序\n  allData.value.sort((a, b) => b.value - a.value)\n  updateChart()\n  startInterval()\n}\n// 更新图表\n// 区域缩放起点值\nconst startValue = ref(0)\n// 区域缩放终点值\nconst endValue = ref(9)\nconst updateChart = () => {\n  // 处理数据\n  // 生成省份的数值\n  const provinceArr = allData.value.map(item => item.name)\n  // 省份对应的销售金额\n  const valueArr = allData.value.map(item => item.value)\n  const dataOption = {\n    xAxis: {\n      data: provinceArr\n    },\n    // 区域缩放\n    dataZoom: [\n      {\n        show: false,\n        startValue: startValue.value,\n        endValue: endValue.value\n      }\n    ],\n    series: [\n      {\n        data: valueArr\n      }\n    ]\n  }\n  echartInstance.setOption(dataOption)\n}\n// 浏览器屏幕发生变化调用，屏幕适配\nconst screenAdapter = () => {\n  const titleFontSize = rankRef.value.offsetWidth / 100 * 3.6\n  const adapterOption = {\n    title: {\n      textStyle: {\n        fontSize: titleFontSize\n      }\n    },\n    series: [\n      {\n        barWidth: titleFontSize,\n        label: {\n          textStyle: {\n            color: getThemeValue(theme.value).titleColor,\n            fontSize: titleFontSize / 2.3\n          }\n        },\n        itemStyle: {\n          barBorderRadius: [titleFontSize / 2, titleFontSize / 2, 0, 0]\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(adapterOption)\n  echartInstance.resize()\n}\n\n// 变化\nconst timerId = ref(null)\nconst startInterval = () => {\n  if (timerId.value) clearInterval(timerId)\n  timerId.value = setInterval(() => {\n    startValue.value++\n    endValue.value++\n    if (endValue.value > allData.value.length - 1) {\n      startValue.value = 0\n      endValue.value = 9\n    }\n    updateChart()\n  }, 2000)\n}\n\nonUnmounted(() => {\n  // 取消监听\n  window.removeEventListener('resize', screenAdapter)\n  clearInterval(timerId)\n})\n\n// 组件创建注册回调函数\nproxy.$socket.registerCallBack('rankData', getData)\n// 组件销毁注销回调函数\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('rankData')\n})\nonMounted(() => {\n  // 发送数据给服务器\n  proxy.$socket.send({\n    action: 'getData',\n    socketType: 'rankData',\n    chartName: 'rank',\n    value: ''\n  })\n})\n\n// 让父组件可拿到自己方法\ndefineExpose({\n  screenAdapter\n})\n</script>\n\n<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"rankRef\"></div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped></style>\n","import script from \"./Rank.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Rank.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\nimport { useStoreStore } from '@/store/index.js'\n\nimport { getThemeValue } from '@/utils/theme_utils'\n\nconst { proxy } = getCurrentInstance()\n\nconst store = useStoreStore()\n\n// 监听主题变化\nconst theme = computed(() => store.theme)\nwatch(\n  () => theme.value,\n  (newValue, oldValue) => {\n    console.log('主题切换了')\n    // 1.销毁图表实例\n    echartInstance.dispose()\n    // 2.重新初始化图表实例\n    initChart()\n    // 3.屏幕适配\n    screenAdapter()\n    // 4.更新图表数据\n    updateChart()\n  }\n)\n\n// 图表 dom 元素\nconst sellerRef = ref(null)\n// 图表的实例 --- 大坑不要用响应式定义实例\nlet echartInstance = null\n// 服务器返回的图表数据\nconst allData = ref(null)\n\nconst limit = ref({\n  // 当前显示页数\n  currentPage: 1,\n  // 一共多少页\n  totalPage: 0,\n  // 定时器标识\n  timerId: null\n})\n\nonMounted(() => {\n  initChart()\n  // getData()\n})\n// 窗口变化\nonMounted(() => {\n  window.addEventListener('resize', screenAdapter)\n  // 开始也要执行一次\n  screenAdapter()\n})\n\n// 初始化 echartInstance 对象\nconst initChart = () => {\n  echartInstance = proxy.$echarts.init(sellerRef.value, theme.value)\n\n  const option = {\n    title: {\n      text: '▎ 商家销量统计',\n      textStyle: {\n        fontSize: 66\n      },\n      left: 20,\n      top: 20\n    },\n    grid: {\n      top: '20%',\n      left: '3%',\n      right: '6%',\n      bottom: '3%',\n      // 是否包含坐标轴的刻度标签\n      containLabel: true\n    },\n    xAxis: {\n      type: 'value'\n    },\n    yAxis: {\n      type: 'category'\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'line',\n        z: 0,\n        lineStyle: {\n          color: 'rgba(45, 52, 67, 0.3)',\n          width: 66\n        }\n      }\n    },\n    series: [\n      {\n        type: 'bar',\n        // 柱子的宽度\n        barWidth: 66,\n        label: {\n          show: true,\n          position: 'right'\n        },\n        itemStyle: {\n          barBorderRadius: [0, 33, 33, 0],\n          // 指明颜色渐变的方向\n          // 指明不同百分比之下颜色的值\n          color: new proxy.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\n            // 0% 处的颜色\n            { offset: 0, color: '#5052EE' },\n            // 100% 处的颜色\n            { offset: 1, color: '#AB6EE5' }\n          ])\n        }\n      }\n    ]\n  }\n\n  echartInstance.setOption(option)\n\n  // 对图标对象进行数据事件的监听\n  echartInstance.on('mouseover', () => {\n    console.log('mouseover')\n    clearInterval(limit.value.timerId)\n  })\n  echartInstance.on('mouseout ', () => {\n    console.log('mouseout')\n    startInterval()\n  })\n}\n// 获取服务器数据\nconst getData = async (res) => {\n  // const { data: res } = await proxy.$http.get('/seller')\n  console.log(res)\n  allData.value = res\n  // 从小到大排序\n  allData.value.sort((a, b) => a.value - b.value)\n  // 每五个元素显示一页\n  limit.value.totalPage = allData.value.length % 5 === 0 ? allData.value.length / 5 : allData.value.length / 5 + 1\n  updateChart()\n  // 启动定时器\n  startInterval()\n}\n// 更新图表\nconst updateChart = () => {\n  const start = (limit.value.currentPage - 1) * 5\n  const end = limit.value.currentPage * 5\n  const showData = allData.value.slice(start, end)\n  const dataOption = {\n    yAxis: {\n      data: showData.map(item => item.name)\n    },\n    series: [\n      {\n        data: showData.map(item => item.value),\n        label: {\n          textStyle: {\n            color: getThemeValue(theme.value).titleColor\n          }\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(dataOption)\n}\n// startInterval\nconst startInterval = () => {\n  if (limit.value.timerId) clearInterval(limit.value.timerId)\n  limit.value.timerId = setInterval(() => {\n    limit.value.currentPage++\n    if (limit.value.currentPage > limit.value.totalPage) {\n      limit.value.currentPage = 1\n    }\n    updateChart()\n  }, 3000)\n}\n// 浏览器屏幕发生变化调用，屏幕适配\nconst screenAdapter = () => {\n  const titleFontSize = sellerRef.value.offsetWidth / 100 * 3.6\n  const adapterOption = {\n    title: {\n      textStyle: {\n        fontSize: titleFontSize\n      }\n    },\n    tooltip: {\n      axisPointer: {\n        lineStyle: {\n          width: titleFontSize\n        }\n      }\n    },\n    series: [\n      {\n        // 柱子的宽度\n        barWidth: titleFontSize,\n        label: {\n          textStyle: {\n            fontSize: titleFontSize / 1.5\n          }\n        },\n        itemStyle: {\n          barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(adapterOption)\n  echartInstance.resize()\n}\n\nonUnmounted(() => {\n  // 销毁定时器\n  clearInterval(limit.value.timerId)\n  // // 销毁图表实例\n  // echartInstance.dispose()\n  // 移除窗口变化事件\n  window.removeEventListener('resize', screenAdapter)\n})\n\n// 组件创建注册回调函数\nproxy.$socket.registerCallBack('sellerData', getData)\n// 组件销毁注销回调函数\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('sellerData')\n})\nonMounted(() => {\n  // 发送数据给服务器\n  proxy.$socket.send({\n    action: 'getData',\n    socketType: 'sellerData',\n    chartName: 'seller',\n    value: ''\n  })\n})\n\n// 让父组件可拿到自己方法\ndefineExpose({\n  screenAdapter\n})\n</script>\n\n<template>\n  <!-- 商家销量统计横向柱状图 -->\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"sellerRef\"></div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped></style>\n","import script from \"./Seller.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Seller.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { getCurrentInstance, onMounted, ref, onUnmounted, defineExpose, computed, watch } from 'vue'\nimport { useStoreStore } from '@/store/index.js'\n\nconst { proxy } = getCurrentInstance()\n\nconst store = useStoreStore()\n\n// 监听主题变化\nconst theme = computed(() => store.theme)\nwatch(\n  () => theme.value,\n  (newValue, oldValue) => {\n    console.log('主题切换了')\n    // 1.销毁图表实例\n    echartInstance.dispose()\n    // 2.重新初始化图表实例\n    initChart()\n    // 3.屏幕适配\n    screenAdapter()\n    // 4.更新图表数据\n    updateChart()\n  }\n)\n\n// 图表实例\nlet echartInstance = null\n// 图表 dom 元素\nconst stockRef = ref(null)\n// 图表数据\nconst allData = ref(null)\n\nconst currentIndex = ref(0)\nconst timerId = ref(null)\n\nonMounted(() => {\n  initChart()\n  // getData()\n})\n// 窗口变化\nonMounted(() => {\n  window.addEventListener('resize', screenAdapter)\n  // 开始也要执行一次\n  screenAdapter()\n})\n\n// 初始化图表\nconst initChart = () => {\n  echartInstance = proxy.$echarts.init(stockRef.value, theme.value)\n  const initOption = {\n    title: {\n      text: '▎ 库存和销量分析',\n      top: 20,\n      left: 20\n    }\n  }\n  echartInstance.setOption(initOption)\n\n  // 对图标对象进行数据事件的监听\n  echartInstance.on('mouseover', () => {\n    console.log('mouseover')\n    clearInterval(timerId.value)\n  })\n  echartInstance.on('mouseout ', () => {\n    console.log('mouseout')\n    startInterval()\n  })\n}\n// 获取图表数据\nconst getData = async (res) => {\n  // const { data: res } = await proxy.$http.get('/stock')\n  console.log(res)\n  allData.value = res\n  updateChart()\n  startInterval()\n}\n// 更新图表\nconst updateChart = () => {\n  // 处理数据\n  const centerArr = [\n    ['18%', '40%'],\n    ['50%', '40%'],\n    ['82%', '40%'],\n    ['34%', '75%'],\n    ['66%', '75%']\n  ]\n  const colorArr = [\n    ['#4FF778', '#0BA82C'],\n    ['#E5DD45', '#E8B11C'],\n    ['#E8821C', '#E55445'],\n    ['#5052EE', '#AB6EE5'],\n    ['#23E5E5', '#2E72BF']\n  ]\n\n  const start = currentIndex.value * 5\n  const end = (currentIndex.value + 1) * 5\n\n  const showData = allData.value.slice(start, end)\n  const seriesArr = showData.map((item, index) => ({\n    type: 'pie',\n    center: centerArr[index],\n    hoverAnimation: false, // 关闭鼠标移入时的动画效果\n    labelLine: {\n      show: false // 关闭指示线\n    },\n    label: {\n      position: 'center',\n      color: colorArr[index][0]\n    },\n    data: [\n      {\n        value: item.sales,\n        name: `${item.name} \\n\\n ${item.sales}`,\n        itemStyle: {\n          color: new proxy.$echarts.graphic.LinearGradient(0, 1, 0, 0, [\n            {\n              offset: 0,\n              color: colorArr[index][0]\n            },\n            {\n              offset: 1,\n              color: colorArr[index][1]\n            }\n          ])\n        }\n      },\n      {\n        value: item.stock,\n        itemStyle: {\n          color: '#333843'\n        }\n      }\n    ]\n  }))\n  const dataOption = {\n    series: seriesArr\n  }\n  echartInstance.setOption(dataOption)\n}\n// 浏览器屏幕发生变化调用，屏幕适配\nconst screenAdapter = () => {\n  const titleFontSize = stockRef.value.offsetWidth / 100 * 3.6\n  const innerRadius = titleFontSize * 3\n  const outerRadius = innerRadius * 1.1\n  const adapterOption = {\n    title: {\n      textStyle: {\n        fontSize: titleFontSize\n      }\n    },\n    series: [\n      {\n        type: 'pie',\n        radius: [outerRadius, innerRadius],\n        label: {\n          fontSize: titleFontSize / 1.5\n        }\n      },\n      {\n        type: 'pie',\n        radius: [outerRadius, innerRadius],\n        label: {\n          fontSize: titleFontSize / 1.5\n        }\n      },\n      {\n        type: 'pie',\n        radius: [outerRadius, innerRadius],\n        label: {\n          fontSize: titleFontSize / 1.5\n        }\n      },\n      {\n        type: 'pie',\n        radius: [outerRadius, innerRadius],\n        label: {\n          fontSize: titleFontSize / 1.5\n        }\n      },\n      {\n        type: 'pie',\n        radius: [outerRadius, innerRadius],\n        label: {\n          fontSize: titleFontSize / 1.5\n        }\n      }\n    ]\n  }\n  echartInstance.setOption(adapterOption)\n  echartInstance.resize()\n}\n\n// 启动定时器\nconst startInterval = () => {\n  if (timerId.value) clearInterval(timerId.value)\n  timerId.value = setInterval(() => {\n    currentIndex.value++\n    if (currentIndex.value > 1) currentIndex.value = 0\n    updateChart()\n  }, 3000)\n}\n\nonUnmounted(() => {\n  // 取消监听\n  window.removeEventListener('resize', screenAdapter)\n\n  clearInterval(timerId.value)\n})\n\n// 组件创建注册回调函数\nproxy.$socket.registerCallBack('stockData', getData)\n// 组件销毁注销回调函数\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('stockData')\n})\nonMounted(() => {\n  // 发送数据给服务器\n  proxy.$socket.send({\n    action: 'getData',\n    socketType: 'stockData',\n    chartName: 'stock',\n    value: ''\n  })\n})\n\n// 让父组件可拿到自己方法\ndefineExpose({\n  screenAdapter\n})\n</script>\n\n<template>\n  <div class=\"com-container\">\n    <div class=\"com-chart\" ref=\"stockRef\"></div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped></style>\n","import script from \"./Stock.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stock.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\nimport { getCurrentInstance, onMounted, ref, onUnmounted, computed, defineExpose, watch } from 'vue'\nimport { useStoreStore } from '@/store/index.js'\n\nimport { getThemeValue } from '@/utils/theme_utils'\n\nconst { proxy } = getCurrentInstance()\n\nconst store = useStoreStore()\n\n// 监听主题变化\nconst theme = computed(() => store.theme)\nwatch(\n  () => theme.value,\n  (newValue, oldValue) => {\n    console.log('主题切换了')\n    // 1.销毁图表实例\n    echartInstance.dispose()\n    // 2.重新初始化图表实例\n    initChart()\n    // 3.屏幕适配\n    screenAdapter()\n    // 4.更新图表数据\n    updateChart()\n  }\n)\n\n// 图表实例\nlet echartInstance = null\n// 图表 dom 元素\nconst trendRef = ref(null)\n// 图表数据\nconst allData = ref(null)\n\nonMounted(() => {\n  initChart()\n  // getData()\n})\n// 窗口变化\nonMounted(() => {\n  window.addEventListener('resize', screenAdapter)\n  // 开始也要执行一次\n  screenAdapter()\n})\n\n// 初始化图表\nconst initChart = () => {\n  echartInstance = proxy.$echarts.init(trendRef.value, theme.value)\n  const initOption = {\n    xAxis: {\n      type: 'category',\n      // 紧挨边缘\n      boundaryGap: false\n    },\n    yAxis: {\n      type: 'value'\n    },\n    grid: {\n      top: '35%',\n      left: '3%',\n      right: '4%',\n      bottom: '1%',\n      // 是否包含坐标轴的刻度标签\n      containLabel: true\n    },\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'cross'\n      }\n    },\n    legend: {\n      left: 20,\n      top: '20%',\n      icon: 'circle'\n    }\n  }\n  echartInstance.setOption(initOption)\n}\n// 获取图表数据\nconst getData = (res) => {\n  // res 是服务端发送给客户端图表的数据\n  // const { data: res } = await proxy.$http.get('/trend')\n  console.log(res)\n  allData.value = res\n  updateChart()\n}\n// 更新图表\nconst updateChart = () => {\n  // 半透明的颜色值\n  const colorArr1 = [\n    'rgba(11, 168, 44, 0.5)',\n    'rgba(44, 110, 255, 0.5)',\n    'rgba(22, 242, 217, 0.5)',\n    'rgba(254, 33, 30, 0.5)',\n    'rgba(250, 105, 0, 0.5)'\n  ]\n  // 全透明的颜色值\n  const colorArr2 = [\n    'rgba(11, 168, 44, 0)',\n    'rgba(44, 110, 255, 0)',\n    'rgba(22, 242, 217, 0)',\n    'rgba(254, 33, 30, 0)',\n    'rgba(250, 105, 0, 0)'\n  ]\n\n  // 处理数据\n  // 类目轴的数据\n  const timeArr = allData.value.common.month\n  // y 轴的数据 series 下的数据\n  const valueArr = allData.value[choiceType.value].data\n  const seriesArr = valueArr.map((item, index) => ({\n    name: item.name,\n    type: 'line',\n    data: item.data,\n    // 堆叠图\n    stack: choiceType.value,\n    // 面积图\n    areaStyle: {\n      color: new proxy.$echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n        offset: 0,\n        color: colorArr1[index]\n      }, {\n        offset: 1,\n        color: colorArr2[index]\n      }])\n    }\n  }))\n  // 图例的数据\n  const legendArr = valueArr.map(item => item.name)\n  const dataOption = {\n    xAxis: {\n      data: timeArr\n    },\n    legend: {\n      data: legendArr\n    },\n    series: seriesArr\n  }\n  echartInstance.setOption(dataOption)\n}\n// 浏览器屏幕发生变化调用，屏幕适配\nconst screenAdapter = () => {\n  titleFontSize.value = trendRef.value.offsetWidth / 100 * 3.6\n  const adapterOption = {\n    // 图例大小\n    legend: {\n      itemWidth: titleFontSize.value,\n      itemHeight: titleFontSize.value,\n      // 间隔\n      itemGap: titleFontSize.value,\n      textStyle: {\n        fontSize: titleFontSize.value / 1.5\n      }\n    }\n  }\n  echartInstance.setOption(adapterOption)\n  echartInstance.resize()\n}\n\nonUnmounted(() => {\n  // 取消监听\n  window.removeEventListener('resize', screenAdapter)\n})\n\n// 选择\nconst showChoice = ref(false)\n// 显示数据类型\nconst choiceType = ref('map')\n// 切换类型\nconst handleSelected = (currentType) => {\n  choiceType.value = currentType\n  showChoice.value = false\n  updateChart()\n}\n// 显示标题\nconst showTitle = computed(() => {\n  if (!allData.value) return ''\n  return allData.value[choiceType.value].title\n})\n// 动态设置大小\nconst titleFontSize = ref(0)\nconst comStyle = computed(() => {\n  return {\n    fontSize: titleFontSize.value + 'px',\n    color: getThemeValue(theme.value).titleColor\n  }\n})\nconst marginStyle = computed(() => {\n  return {\n    marginLeft: titleFontSize.value + 'px',\n    backgroundColor: getThemeValue(theme.value).selectedBgc\n  }\n})\n\n// 组件创建注册回调函数\nproxy.$socket.registerCallBack('trendData', getData)\n// 组件销毁注销回调函数\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('trendData')\n})\nonMounted(() => {\n  // 发送数据给服务器\n  proxy.$socket.send({\n    action: 'getData',\n    socketType: 'trendData',\n    chartName: 'trend',\n    value: ''\n  })\n})\n\n// 让父组件可拿到自己方法\ndefineExpose({\n  screenAdapter\n})\n</script>\n\n<template>\n  <div class=\"com-container\">\n    <div class=\"title\" :style=\"comStyle\">\n      <div @click=\"showChoice = !showChoice\">\n        <span>{{ '▎ ' + showTitle }}</span>\n        <span class=\"iconfont title-icon\" :style=\"comStyle\">&#xe6eb;</span>\n      </div>\n      <div class=\"select-con\" v-show=\"showChoice\" :style=\"marginStyle\">\n        <div class=\"select-item\" v-for=\"item in allData?.type\" :key=\"item.key\" v-show=\"item.key !== choiceType\"\n          @click=\"handleSelected(item.key)\">\n          {{ item.text }}\n        </div>\n      </div>\n    </div>\n    <div class=\"com-chart\" ref=\"trendRef\"></div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped>\n.title {\n  position: absolute;\n  top: 20px;\n  left: 20px;\n  z-index: 10;\n  color: white;\n\n  .title-icon {\n    margin-left: 10px;\n    cursor: pointer;\n    font-weight: 700;\n  }\n}\n</style>\n","import script from \"./Trend.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Trend.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Trend.vue?vue&type=style&index=0&id=c4f55bc4&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c4f55bc4\"]])\n\nexport default __exports__","<script setup>\nimport { ref, getCurrentInstance, nextTick, onUnmounted, computed, onMounted } from 'vue'\n\nimport Hot from '@/components/Hot.vue'\nimport Map from '@/components/Map.vue'\nimport Rank from '@/components/Rank.vue'\nimport Seller from '@/components/Seller.vue'\nimport Stock from '@/components/Stock.vue'\nimport Trend from '@/components/Trend.vue'\n\nimport { getThemeValue } from '@/utils/theme_utils'\nimport { useStoreStore } from '@/store/index.js'\n\nimport { toggleFull, isFull } from 'be-full'\n\nconst store = useStoreStore()\n\nconst { proxy } = getCurrentInstance()\n\nconst theme = computed(() => store.theme)\nconst logoSrc = computed(() => getThemeValue(theme.value).logoSrc)\nconst headerSrc = computed(() => getThemeValue(theme.value).headerBorderSrc)\nconst themeSrc = computed(() => getThemeValue(theme.value).themeSrc)\nconst containerStyle = computed(() => ({\n  backgroundColor: getThemeValue(theme.value).backgroundColor,\n  color: getThemeValue(theme.value).titleColor\n}))\n\n// 定义每个图表的全屏状态\nconst fullScreenStatus = ref({\n  trend: false,\n  seller: false,\n  map: false,\n  rank: false,\n  hot: false,\n  stock: false\n})\nconst trend = ref(null)\nconst seller = ref(null)\nconst map = ref(null)\nconst rank = ref(null)\nconst hot = ref(null)\nconst stock = ref(null)\n\n// 全屏\nconst changeSize = async (chartName) => {\n  // 1.改变 fullScreenStatus 的数据\n  // 2.需要调用每一个图表组件 screenAdapter 方法\n  // fullScreenStatus.value[chartName] = !fullScreenStatus.value[chartName]\n\n  // await nextTick()\n  // proxy.$refs[chartName].screenAdapter()\n\n  // 全屏效果联动\n  proxy.$socket.send({\n    action: 'fullScreen',\n    socketType: 'fullScreen',\n    chartName: chartName,\n    value: !fullScreenStatus.value[chartName]\n  })\n}\n// 全屏切换联动\nconst recvData = async (data) => {\n  console.log(data)\n  // 取出是哪个图表需要进行切换，切换成什么状态\n  const chartName = data.chartName\n  const targetValue = data.value\n  fullScreenStatus.value[chartName] = targetValue\n\n  await nextTick()\n  proxy.$refs[chartName].screenAdapter()\n}\nproxy.$socket.registerCallBack('fullScreen', recvData)\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('fullScreen')\n})\n\n// 主题切换\nconst handleChangeTheme = () => {\n  // store.changeTheme()\n\n  // 主题切换联动\n  proxy.$socket.send({\n    action: 'themeChange',\n    socketType: 'themeChange',\n    chartName: '',\n    value: ''\n  })\n}\nconst recvThemeChange = () => {\n  store.changeTheme()\n}\nproxy.$socket.registerCallBack('themeChange', recvThemeChange)\nonUnmounted(() => {\n  proxy.$socket.unRegisterCallBack('themeChange')\n})\n\nconst time = ref('')\nconst timer = ref(null)\nonMounted(() => {\n  time.value = proxy.$dayjs(new Date()).format('YYYY-MM-DD HH:mm:ss')\n  if (timer.value) clearInterval(timer.value)\n  timer.value = setInterval(() => {\n    time.value = proxy.$dayjs(new Date()).format('YYYY-MM-DD HH:mm:ss')\n  }, 1000)\n})\nonUnmounted(() => {\n  if (timer.value) clearInterval(timer.value)\n})\n\n// 全屏切换按钮样式\nconst fullScreenClickStyle = computed(() => ({\n  backgroundColor: getThemeValue(theme.value === 'chalk' ? 'vintage' : 'chalk').backgroundColor,\n  color: getThemeValue(theme.value === 'chalk' ? 'vintage' : 'chalk').titleColor\n}))\n\n// 思否全屏\nconst isFullScreen = ref(isFull(document.documentElement))\nconsole.log(isFull(document.documentElement))\n//  全屏事件\nconst fullScreenClick = () => {\n  toggleFull(document.documentElement)\n  isFullScreen.value = !isFull(document.documentElement)\n}\n</script>\n\n<template>\n  <div class=\"screen-container\" :style=\"containerStyle\">\n    <header class=\"screen-header\">\n      <div>\n        <img :src=\"headerSrc\" alt=\"\">\n      </div>\n      <span class=\"logo\">\n        <img :src=\"logoSrc\" alt=\"\">\n        <!-- LOGO -->\n      </span>\n      <span class=\"title\">电商平台实时监控系统</span>\n      <div class=\"title-right\">\n        <img :src=\"themeSrc\" class=\"qiehuan\" @click=\"handleChangeTheme\">\n        <button class=\"full-screen-click\" :style=\"fullScreenClickStyle\" @click=\"fullScreenClick\">{{ !isFullScreen ? '全屏' :\n          '退出全屏' }}</button>\n        <span class=\"datetime\">{{ time }}</span>\n      </div>\n    </header>\n    <div class=\"screen-body\">\n      <section class=\"screen-left\">\n        <div id=\"left-top\" :class=\"[fullScreenStatus.trend && 'fullscreen']\">\n          <!-- 销量趋势图表 -->\n          <Trend ref=\"trend\" />\n          <div class=\"resize\" @click=\"changeSize('trend')\">\n            <span :class=\"['iconfont', fullScreenStatus.trend ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\n          </div>\n        </div>\n        <div id=\"left-bottom\" :class=\"[fullScreenStatus.seller && 'fullscreen']\">\n          <!-- 商家销售金额图表 -->\n          <Seller ref=\"seller\" />\n          <div class=\"resize\" @click=\"changeSize('seller')\">\n            <span :class=\"['iconfont', fullScreenStatus.seller ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\n          </div>\n        </div>\n      </section>\n      <section class=\"screen-middle\">\n        <div id=\"middle-top\" :class=\"[fullScreenStatus.map && 'fullscreen']\">\n          <!-- 商家分布图表 -->\n          <Map ref=\"map\" />\n          <div class=\"resize\" @click=\"changeSize('map')\">\n            <span :class=\"['iconfont', fullScreenStatus.map ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\n          </div>\n        </div>\n        <div id=\"middle-bottom\" :class=\"[fullScreenStatus.rank && 'fullscreen']\">\n          <!-- 地区销量排行图表 -->\n          <Rank ref=\"rank\" />\n          <div class=\"resize\" @click=\"changeSize('rank')\">\n            <span :class=\"['iconfont', fullScreenStatus.rank ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\n          </div>\n        </div>\n      </section>\n      <section class=\"screen-right\">\n        <div id=\"right-top\" :class=\"[fullScreenStatus.hot && 'fullscreen']\">\n          <!-- 热销商品占比图表 -->\n          <Hot ref=\"hot\" />\n          <div class=\"resize\" @click=\"changeSize('hot')\">\n            <span :class=\"['iconfont', fullScreenStatus.hot ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\n          </div>\n        </div>\n        <div id=\"right-bottom\" :class=\"[fullScreenStatus.stock && 'fullscreen']\">\n          <!-- 库存销量分析图表 -->\n          <Stock ref=\"stock\" />\n          <div class=\"resize\" @click=\"changeSize('stock')\">\n            <span :class=\"['iconfont', fullScreenStatus.stock ? 'icon-compress-alt' : 'icon-expand-alt']\"></span>\n          </div>\n        </div>\n      </section>\n    </div>\n  </div>\n</template>\n\n<style lang=\"less\" scoped>\n// 全屏样式的定义\n// 全屏样式的定义\n.fullscreen {\n  position: fixed !important;\n  top: 0 !important;\n  left: 0 !important;\n  width: 100% !important;\n  height: 100% !important;\n  margin: 0 !important;\n  z-index: 100;\n}\n\n.screen-container {\n  width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  background-color: #161522;\n  color: #fff;\n  box-sizing: border-box;\n}\n\n.screen-header {\n  width: 100%;\n  height: 64px;\n  font-size: 20px;\n  position: relative;\n\n  > div {\n    img {\n      width: 100%;\n    }\n  }\n\n  .title {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    font-size: 20px;\n    font-weight: 700;\n    transform: translate(-50%, -50%);\n  }\n\n  .title-right {\n    display: flex;\n    align-items: center;\n    position: absolute;\n    right: 0px;\n    top: 50%;\n    transform: translateY(-80%);\n  }\n\n  .qiehuan {\n    width: 28px;\n    height: 21px;\n    cursor: pointer;\n  }\n\n  .datetime {\n    font-size: 15px;\n    margin-left: 10px;\n    font-weight: 700;\n  }\n\n  .logo {\n    position: absolute;\n    left: 0px;\n    top: 50%;\n    transform: translateY(-80%);\n\n    img {\n      height: 35px;\n      width: 128px;\n    }\n  }\n}\n\n.screen-body {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  margin-top: 10px;\n\n  .screen-left {\n    height: 100%;\n    width: 27.6%;\n\n    #left-top {\n      height: 53%;\n      position: relative;\n    }\n\n    #left-bottom {\n      height: 31%;\n      margin-top: 25px;\n      position: relative;\n    }\n  }\n\n  .screen-middle {\n    height: 100%;\n    width: 41.5%;\n    margin-left: 1.6%;\n    margin-right: 1.6%;\n\n    #middle-top {\n      width: 100%;\n      height: 56%;\n      position: relative;\n    }\n\n    #middle-bottom {\n      margin-top: 25px;\n      width: 100%;\n      height: 28%;\n      position: relative;\n    }\n  }\n\n  .screen-right {\n    height: 100%;\n    width: 27.6%;\n\n    #right-top {\n      height: 46%;\n      position: relative;\n    }\n\n    #right-bottom {\n      height: 38%;\n      margin-top: 25px;\n      position: relative;\n    }\n  }\n}\n\n.resize {\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  cursor: pointer;\n  font-weight: 700;\n}\n\n.full-screen-click {\n  padding: 2px 8px;\n  margin-left: 10px;\n  border: none;\n  border-radius: 3px;\n  font-size: 15px;\n  font-weight: 700;\n}\n</style>\n","import script from \"./ScreenPage.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ScreenPage.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ScreenPage.vue?vue&type=style&index=0&id=17f122dc&lang=less&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-17f122dc\"]])\n\nexport default __exports__"],"names":["exports","e","document","documentElement","l","querySelector","n","createElement","t","u","r","c","HTMLElement","o","innerHTML","appendChild","i","contains","removeChild","F","m","sfc","props","target","__vccOpts","key","val","useStoreStore","defineStore","count","ref","increment","value","theme","changeTheme","headerBorderDarkSrc","require","headerBorderLightSrc","themeDarkSrc","themeLightSrc","logoDarkSrc","logoLightSrc","chalk","backgroundColor","titleColor","logoSrc","themeSrc","headerBorderSrc","selectedBgc","vintage","getThemeValue","themeValue","proxy","getCurrentInstance","store","computed","watch","newValue","oldValue","console","log","echartInstance","dispose","initChart","screenAdapter","updateChart","hotRef","allData","currentIndex","titleFontSize","onMounted","window","addEventListener","$echarts","init","initOption","title","text","top","left","legend","icon","tooltip","show","formatter","arg","thirdCategory","data","children","total","reduce","item","resStr","str","name","parseInt","series","type","emphasis","setOption","getData","async","res","seriesData","map","legendData","dataOption","offsetWidth","adapterOption","textStyle","fontSize","itemWidth","itemHeight","itemGap","radius","center","label","resize","onUnmounted","removeEventListener","toLeft","length","toRight","catName","comStyle","color","$socket","registerCallBack","unRegisterCallBack","send","action","socketType","chartName","__expose","__exports__","name2pinyin","安徽","陕西","澳门","北京","重庆","福建","甘肃","广东","广西","贵州","海南","河北","黑龙江","河南","湖北","湖南","江苏","江西","吉林","辽宁","内蒙古","宁夏","青海","山东","上海","山西","四川","台湾","天津","香港","新疆","西藏","云南","浙江","getProvinceMapInfo","path","mapRef","mapData","axios","get","registerMap","geo","roam","bottom","itemStyle","areaColor","borderColor","orient","on","provinceInfo","arr","includes","changeOption","legendArr","seriesArr","rippleEffect","scale","brushType","coordinateSystem","revertMap","revertOption","rankRef","colorArr","grid","right","containLabel","xAxis","yAxis","position","targetColorArr","graphic","LinearGradient","offset","clearInterval","timerId","startInterval","sort","a","b","startValue","endValue","provinceArr","valueArr","dataZoom","barWidth","barBorderRadius","setInterval","sellerRef","limit","currentPage","totalPage","option","trigger","axisPointer","z","lineStyle","width","start","end","showData","slice","stockRef","centerArr","index","hoverAnimation","labelLine","sales","stock","innerRadius","outerRadius","trendRef","boundaryGap","colorArr1","colorArr2","timeArr","common","month","choiceType","stack","areaStyle","showChoice","handleSelected","currentType","showTitle","marginStyle","marginLeft","headerSrc","containerStyle","fullScreenStatus","trend","seller","rank","hot","changeSize","recvData","targetValue","nextTick","$refs","handleChangeTheme","recvThemeChange","time","timer","$dayjs","Date","format","fullScreenClickStyle","isFullScreen","isFull","fullScreenClick","toggleFull"],"sourceRoot":""}